{"version":3,"sources":["components/DevicesList/schema.ts","components/Header/index.tsx","components/DevicesList/commandSchema.ts","components/DevicesList/useLongPress.js","components/DevicesList/index.tsx","components/Marker/index.tsx","components/Map/index.tsx","components/CounterHeader/index.tsx","pages/Home/index.tsx","pages/Statistics/custom.js","components/Graph/index.tsx","components/ThresholdSlide/index.tsx","pages/Statistics/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["ENVIRONMENT_UNIT","gql","GET_BORDER_DEVICES","Header","className","Navbar","bg","expand","Brand","href","Image","Toggle","aria-controls","Collapse","id","Nav","to","style","fontSize","Form","inline","FormControl","type","placeholder","aria-label","Button","variant","SEND_ALERT","UPDATE_BORDER_CYLINDER_STATUS","SET_BORDER_THRESHOLD","preventDefault","event","isTouchEvent","touches","length","useLongPress","onLongPress","onClick","onRelease","shouldPreventDefault","delay","useState","longPressTriggered","setLongPressTriggered","timeout","useRef","target","start","useCallback","addEventListener","passive","current","setTimeout","clear","shouldTriggerClick","clearTimeout","removeEventListener","onMouseDown","e","onTouchStart","onMouseUp","onMouseLeave","onTouchEnd","DeviceItem","props","useContext","DeviceContext","deviceState","setDeviceState","useMutation","updateCylinder","sendAlert","data","hover","isCollapse","setIsCollapse","useEffect","updateState","hovereId","hoveredId","map","device","_id","highlight","confirm","console","log","variables","status","defaultOptions","longPressUpEvent","longPressDownEvent","Accordion","as","Card","eventKey","onPointerEnter","onPointerLeave","backgroundColor","Text","name","lat","long","locationUpdateTime","Date","toLocaleString","icon","CaretUpOutlined","size","CaretDownOutlined","marginBottom","danger","disabled","alert","title","content","onOk","onCancel","Body","temperature","updateTime","humidity","rain","dust","coGas","soilHumid","DeviceList","devicesData","setDevicesData","DeviceMarker","isHoverEffect","setIsHoverEffect","$hover","show","setShow","ref","transform","Overlay","placement","container","containerPadding","Popover","Title","color","fontWeight","Content","Map","bootstrapURLKeys","key","apiKey","defaultCenter","defaultZoom","hoverDistance","lng","CounterHeader","totalDevices","alertDevices","filter","workingDevices","Home","process","Marks","label","ThresholdColor","errorThreshold","safeThreshold","Properties","value","marks","thresholdColor","graphType","Graph","startDate","endDate","property","showData","showLabels","showColors","forEach","time","index","toISOString","push","threshold","state","labels","datasets","borderColor","borderWidth","height","width","options","plugins","display","text","font","padding","legend","position","scales","y","min","responsive","maintainAspectRatio","ThresholdSlideItem","updateThreshold","inputValue","setInputValue","isDisableButton","setIsDisableButton","isTabletOrMobile","useMediaQuery","query","handleOnChange","showConfirm","handleClickReset","span","marginTop","max","onChange","defaultValue","included","vertical","margin","marginRight","StatisticsComponent","deviceIdChoose","setDeviceIdChoose","propertyChoose","setPropertyChoose","setStartDate","setEndDate","FormGroup","Label","Control","RangePicker","showTime","disabledDate","moment","endOf","dateString","_d","ThresholdSlide","createContext","App","useQuery","pollInterval","updateData","getBorderDevices","Provider","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","client","ApolloClient","uri","cache","InMemoryCache","ReactDOM","render","ApolloProvider","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.15286574.chunk.js","sourcesContent":["import { gql } from \"@apollo/client\";\r\n\r\nexport const ENVIRONMENT_UNIT = gql`\r\n    fragment EnvironmentUnit on EnvironmentUnit {\r\n        data\r\n        threshold\r\n        updateTime\r\n    }\r\n`;\r\n\r\nexport const GET_BORDER_DEVICES = gql`\r\n    ${ENVIRONMENT_UNIT}\r\n    query GetBorderDevices {\r\n        getBorderDevices {\r\n            _id\r\n            name \r\n            lat\r\n            long\r\n            humidity {\r\n                ...EnvironmentUnit\r\n            }\r\n            temperature {\r\n                ...EnvironmentUnit\r\n            }\r\n            rain {\r\n                data\r\n                updateTime\r\n            } \r\n            dust {\r\n                ...EnvironmentUnit\r\n            }\r\n            coGas {\r\n                ...EnvironmentUnit\r\n            }\r\n            soilHumid {\r\n                ...EnvironmentUnit\r\n            }\r\n            cylinder \r\n            alert\r\n            locationUpdateTime\r\n        }\r\n    }\r\n`;\r\n\r\nexport const CREATE_BORDER_DEVICE = gql`\r\n    mutation CreateBorderDevice($input: BorderDeviceCreateInput) {\r\n        ${ENVIRONMENT_UNIT}\r\n        createBorderDevice(input: $input) {\r\n            _id\r\n            name \r\n            lat\r\n            long\r\n            humidity {\r\n                ...EnvironmentUnit\r\n            }\r\n            temperature {\r\n                ...EnvironmentUnit\r\n            }\r\n            rain {\r\n                data\r\n                updateTime\r\n            } \r\n            dust {\r\n                ...EnvironmentUnit\r\n            }\r\n            coGas {\r\n                ...EnvironmentUnit\r\n            }\r\n            soilHumid {\r\n                ...EnvironmentUnit\r\n            }\r\n            cylinder\r\n            alert\r\n            locationUpdateTime\r\n        }\r\n    }\r\n`;\r\n\r\nexport const UPDATE_BORDER_DEVICE = gql`\r\n    mutation UpdateBorderDevice($input: BorderDeviceUpdateInput) {\r\n        ${ENVIRONMENT_UNIT}\r\n        updateBorderDevice(input: $input) {\r\n            _id\r\n            name \r\n            lat\r\n            long\r\n            humidity {\r\n                ...EnvironmentUnit\r\n            }\r\n            temperature {\r\n                ...EnvironmentUnit\r\n            }\r\n            rain {\r\n                data\r\n                updateTime\r\n            } \r\n            dust {\r\n                ...EnvironmentUnit\r\n            }\r\n            coGas {\r\n                ...EnvironmentUnit\r\n            }\r\n            soilHumid {\r\n                ...EnvironmentUnit\r\n            }\r\n            cylinder\r\n            alert\r\n            locationUpdateTime\r\n        }\r\n    }\r\n`;","import \"./header.scss\";\r\nimport React from \"react\";\r\nimport {\r\n  Button,\r\n  Form,\r\n  FormControl,\r\n  Image,\r\n  Nav,\r\n  Navbar,\r\n} from \"react-bootstrap\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\n\r\nconst Header: React.FC = () => {\r\n  return (\r\n    <header className=\"border-bottom\">\r\n      <Navbar bg=\"light\" expand=\"lg\" className=\"p-0 px-2\">\r\n        <Navbar.Brand href=\"/\" className=\"p-0\">\r\n          <Image className=\"header__logo\" />\r\n        </Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          <Nav className=\"ml-auto d-flex align-items-center\">\r\n            <NavLink to=\"/\" className=\"px-3\" style={{fontSize: \"1.2rem\"}}>Home</NavLink>\r\n            {/* <NavLink to=\"/devices\" className=\"px-3\" style={{fontSize: \"1.2rem\"}}>Thiết bị</NavLink> */}\r\n            <NavLink to=\"/statistics\" className=\"px-3\" style={{fontSize: \"1.2rem\"}}>Dữ liệu</NavLink>\r\n            <NavLink to=\"/\" className=\"px-3 mr-3\" style={{fontSize: \"1.2rem\"}}>About</NavLink>\r\n          </Nav>\r\n          <Form inline className=\"mr-5 search-input\">\r\n            <FormControl\r\n              type=\"search\"\r\n              placeholder=\"Search\"\r\n              className=\"mr-2\"\r\n              aria-label=\"Search\"\r\n            />\r\n            <Button variant=\"outline-success search-button\">Search</Button>\r\n          </Form>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport const ENVIRONMENT_UNIT = gql`\r\n    fragment EnvironmentUnit on EnvironmentUnit {\r\n        data\r\n        threshold\r\n        updateTime\r\n    }\r\n`;\r\n\r\nexport const SEND_ALERT = gql`\r\n    ${ENVIRONMENT_UNIT}\r\n    mutation SendAlert($id: String!) {\r\n        sendAlert(id: $id) {\r\n            _id\r\n            name \r\n            lat\r\n            long\r\n            humidity {\r\n                ...EnvironmentUnit\r\n            }\r\n            temperature {\r\n                ...EnvironmentUnit\r\n            }\r\n            rain {\r\n                data\r\n                updateTime\r\n            } \r\n            dust {\r\n                ...EnvironmentUnit\r\n            }\r\n            coGas {\r\n                ...EnvironmentUnit\r\n            }\r\n            soilHumid {\r\n                ...EnvironmentUnit\r\n            }\r\n            cylinder\r\n            alert\r\n            locationUpdateTime\r\n        }\r\n    }\r\n`;\r\n\r\nexport const UPDATE_BORDER_CYLINDER_STATUS = gql`\r\n    ${ENVIRONMENT_UNIT}\r\n    mutation UpdateBorderCylinderStatus($id: String!, $status: String!) {\r\n        updateBorderCylinderStatus(id: $id, status: $status) {\r\n            _id\r\n            name \r\n            lat\r\n            long\r\n            humidity {\r\n                ...EnvironmentUnit\r\n            }\r\n            temperature {\r\n                ...EnvironmentUnit\r\n            }\r\n            rain {\r\n                data\r\n                updateTime\r\n            } \r\n            dust {\r\n                ...EnvironmentUnit\r\n            }\r\n            coGas {\r\n                ...EnvironmentUnit\r\n            }\r\n            soilHumid {\r\n                ...EnvironmentUnit\r\n            }\r\n            cylinder\r\n            alert\r\n            locationUpdateTime\r\n        }\r\n    }\r\n`;\r\n\r\nexport const SET_BORDER_THRESHOLD = gql`\r\n    ${ENVIRONMENT_UNIT}\r\n    mutation SetBorderThreshold($id: String!, $property: String! $value: Float!) {\r\n        setBorderThreshold(id: $id, property: $property, value: $value) {\r\n            _id\r\n            name \r\n            lat\r\n            long\r\n            humidity {\r\n                ...EnvironmentUnit\r\n            }\r\n            temperature {\r\n                ...EnvironmentUnit\r\n            }\r\n            rain {\r\n                data\r\n                updateTime\r\n            } \r\n            dust {\r\n                ...EnvironmentUnit\r\n            }\r\n            coGas {\r\n                ...EnvironmentUnit\r\n            }\r\n            soilHumid {\r\n                ...EnvironmentUnit\r\n            }\r\n            cylinder\r\n            alert\r\n            locationUpdateTime\r\n        }\r\n    }\r\n`;","import { useCallback, useRef, useState } from \"react\";\r\n\r\nconst useLongPress = (\r\n    onLongPress,\r\n    onClick,\r\n    onRelease,\r\n    { shouldPreventDefault = true, delay = 300 } = {}\r\n    ) => {\r\n    const [longPressTriggered, setLongPressTriggered] = useState(false);\r\n    const timeout = useRef();\r\n    const target = useRef();\r\n\r\n    const start = useCallback(\r\n        event => {\r\n            if (shouldPreventDefault && event.target) {\r\n                    event.target.addEventListener(\"touchend\", preventDefault, {\r\n                    passive: false\r\n                });\r\n                target.current = event.target;\r\n            }\r\n            timeout.current = setTimeout(() => {\r\n                onLongPress(event);\r\n                setLongPressTriggered(true);\r\n            }, delay);\r\n        },\r\n        [onLongPress, delay, shouldPreventDefault]\r\n    );\r\n\r\n    const clear = useCallback(\r\n        (event, shouldTriggerClick = true) => {\r\n            timeout.current && clearTimeout(timeout.current);\r\n            shouldTriggerClick && !longPressTriggered && onClick();\r\n            shouldTriggerClick && longPressTriggered && onRelease();\r\n            setLongPressTriggered(false);\r\n            if (shouldPreventDefault && target.current) {\r\n                target.current.removeEventListener(\"touchend\", preventDefault);\r\n            }\r\n        },\r\n        [shouldPreventDefault, onClick, onRelease, longPressTriggered]\r\n    );\r\n\r\n    return {\r\n        onMouseDown: e => start(e),\r\n        onTouchStart: e => start(e),\r\n        onMouseUp: e => clear(e),\r\n        onMouseLeave: e => clear(e, false),\r\n        onTouchEnd: e => clear(e)\r\n    };\r\n};\r\n\r\nconst isTouchEvent = event => {\r\nreturn \"touches\" in event;\r\n};\r\n\r\nconst preventDefault = event => {\r\nif (!isTouchEvent(event)) return;\r\n\r\nif (event.touches.length < 2 && event.preventDefault) {\r\n    event.preventDefault();\r\n}\r\n};\r\n\r\nexport default useLongPress;","import { Accordion, Card, Form, FormControl } from \"react-bootstrap\";\r\nimport { Button, Modal } from \"antd\"\r\nimport { CaretUpOutlined, CaretDownOutlined } from '@ant-design/icons';\r\nimport './devices.scss'\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport { DeviceContext } from \"../../App\";\r\nimport { dataProps } from \"../Map\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport { SEND_ALERT, UPDATE_BORDER_CYLINDER_STATUS } from \"./commandSchema\";\r\nimport useLongPress from \"./useLongPress\";\r\nimport { latLng2Tile } from \"google-map-react\";\r\n\r\nexport interface environmentUnit {\r\n    data: any[],\r\n    threshold: number,\r\n    updateTime: Date[]\r\n}\r\nexport interface Device {\r\n    _id: string,\r\n    name: string,\r\n    lat: number[],\r\n    long: number[],\r\n    temperature: environmentUnit,\r\n    humidity: environmentUnit,\r\n    rain: {\r\n        data: boolean[],\r\n        updateTime: Date[],\r\n    },\r\n    dust: environmentUnit,\r\n    coGas: environmentUnit,\r\n    soilHumid: environmentUnit,\r\n    cylinder: boolean,\r\n    alert: boolean,\r\n    locationUpdateTime: Date[],\r\n}\r\n\r\ninterface DeviceItemProps {\r\n    data: dataProps,\r\n    hover: boolean,\r\n}\r\n\r\nconst DeviceItem:React.FC<DeviceItemProps> = (props: DeviceItemProps) => {\r\n    const { deviceState, setDeviceState } = useContext(DeviceContext);\r\n    const [ updateCylinder ] = useMutation(UPDATE_BORDER_CYLINDER_STATUS);\r\n    const [ sendAlert ] = useMutation(SEND_ALERT);\r\n\r\n    const { data, hover } = props;\r\n    const [ isCollapse, setIsCollapse ] = useState(false);\r\n    \r\n    const handleToggle = () => {\r\n        setIsCollapse(!isCollapse);\r\n    }\r\n    \r\n    useEffect(() => {        \r\n        const updateState = {\r\n            hovereId: deviceState.hoveredId,\r\n            data: deviceState.data.map((device: dataProps) => {\r\n                if (device._id === data._id) \r\n                    return ({\r\n                        ...device,\r\n                        highlight: isCollapse\r\n                    })\r\n                return device \r\n            }),\r\n        }\r\n        setDeviceState(updateState)\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [isCollapse]);\r\n\r\n    const { confirm } = Modal;\r\n    const showAlertConfirm = () => {\r\n        confirm({\r\n            title: 'Xác nhận báo động thiết bị',\r\n            content: `Báo động thiết bị ${data.name}`,\r\n            onOk() {\r\n                sendAlert({\r\n                    variables: {\r\n                        id: data._id\r\n                    }\r\n                })\r\n            },\r\n            onCancel() {\r\n            },\r\n        });\r\n        \r\n    }\r\n\r\n    const handleHover = (e: any) => { \r\n        if(!isCollapse)\r\n        setDeviceState({\r\n            ...deviceState,\r\n            hoveredId: data._id,\r\n        });\r\n    }\r\n    const handleQuitHover= (e: any) => {\r\n        if(!isCollapse)\r\n        setDeviceState({\r\n            ...deviceState,\r\n            hoveredId: \"\",\r\n        })\r\n    }\r\n\r\n    const onLongPressUp = () => {\r\n        console.log('longpress up is triggered');\r\n        updateCylinder({\r\n            variables: {\r\n                id: data._id,\r\n                status: \"up\"\r\n            }\r\n        })\r\n    };\r\n    \r\n    const onLongPressDown = () => {\r\n        console.log('longpress down is triggered');\r\n        updateCylinder({\r\n            variables: {\r\n                id: data._id,\r\n                status: \"down\"\r\n            }\r\n        })\r\n    };\r\n    const onRelease = () => {\r\n        console.log('release up')\r\n        updateCylinder({\r\n            variables: {\r\n                id: data._id,\r\n                status: \"stop\"\r\n            }\r\n        })\r\n        \r\n    }\r\n    \r\n    const onClickUp = () => {\r\n        console.log('click up is triggered')\r\n    }\r\n    const onClickDown = () => {\r\n        console.log('click down is triggered')\r\n    }\r\n\r\n    const defaultOptions = {\r\n        shouldPreventDefault: true,\r\n        delay: 200,\r\n    };\r\n\r\n    const longPressUpEvent = useLongPress(onLongPressUp, onClickUp, onRelease, defaultOptions);\r\n    const longPressDownEvent = useLongPress(onLongPressDown, onClickDown, onRelease, defaultOptions);\r\n\r\n    return (\r\n        <Accordion>\r\n            <Accordion.Toggle \r\n                as={Card} \r\n                eventKey={data._id} \r\n                className=\"device-toogle\" \r\n                onPointerEnter={handleHover}\r\n                onPointerLeave={handleQuitHover}\r\n                onClick={handleToggle}\r\n                id={data._id}\r\n            >\r\n                <Card className=\"device-item justify-content-flex-start\" id={data._id} style={{backgroundColor: hover? \"#979ea3\": \"\"}}>\r\n                    <Card.Text as=\"div\" className=\"d-flex p-2 justify-content-space-between align-items-center\" id={data._id}>\r\n                        <i \r\n                            className=\"bi-wifi px-3 align-self-center device-icon\"\r\n                            style={{fontSize: \"2.8rem\"}}\r\n                        />\r\n                        <div className=\"my-2\">\r\n                            <h1 \r\n                                className=\"mx-3 device-name\"\r\n                            >\r\n                                {data.name}\r\n                            </h1>\r\n                            {data.lat && data.long &&<h4\r\n                                className=\"device-location\" \r\n                            >\r\n                                Vị trí: {data.lat[data.lat.length-1]}, {data.long[data.long.length-1]}\r\n                            </h4> }\r\n                            {data.locationUpdateTime && <i\r\n                                className=\"device-location-update\"\r\n                            >\r\n                                Cập nhật vị trí lần cuối: {new Date(data.locationUpdateTime[data.locationUpdateTime.length-1]).toLocaleString()}\r\n                            </i>}\r\n                        </div>  \r\n                        <div className=\"d-flex flex-column justify-content-center ml-auto mx-2\">\r\n                            <Button \r\n                                {...longPressUpEvent}\r\n                                icon={<CaretUpOutlined />}\r\n                                size=\"large\"\r\n                            />\r\n                            <Button \r\n                                {...longPressDownEvent}\r\n                                icon={<CaretDownOutlined />}\r\n                                size=\"large\"\r\n                            />\r\n                        </div>\r\n                        <Button\r\n                            style={{ marginBottom: '16px' }}\r\n                            type=\"primary\"\r\n                            danger\r\n                            disabled={data.alert}\r\n                            onClick={showAlertConfirm}\r\n                        >\r\n                            Alert\r\n                        </Button>\r\n                    {isCollapse && \r\n                        <i className=\"fa fa-sort-desc ml-auto mx-2 align-self-start pin\" />                \r\n                    }\r\n                    {!isCollapse && \r\n                        <i className=\"fa fa-sort-up ml-auto mx-2 align-self-start pin\" />                \r\n                    }\r\n                    </Card.Text>\r\n                </Card>\r\n            </Accordion.Toggle>\r\n            <Accordion.Collapse className=\"device-collapse\" eventKey={data._id}>\r\n                <Card className=\"device-collapse-content\">\r\n                    <Card.Body className=\"d-flex flex-row px-1\">\r\n                        <ul>\r\n                            <li>Nhiệt độ: {data.temperature.data[data.temperature.data.length-1]} °C</li>\r\n                            <i>(Cập nhật lần cuối: {new Date(data.temperature.updateTime[data.temperature.updateTime.length-1]).toLocaleString()})</i> \r\n                            <li>Độ ẩm: {data.humidity.data[data.humidity.data.length-1]} %</li>\r\n                            <i>(Cập nhật lần cuối: {new Date(data.humidity.updateTime[data.humidity.updateTime.length-1]).toLocaleString()})</i> \r\n                            <li>Mưa: {data.rain.data[data.rain.data.length-1] ? `Có`: `Không`}</li>\r\n                            <i>(Cập nhật lần cuối: {new Date(data.rain.updateTime[data.rain.updateTime.length-1]).toLocaleString()})</i> \r\n                        </ul>    \r\n                        <ul className=\"pr-4\">\r\n                            <li>Độ bụi: {data.dust.data[data.dust.data.length-1]} AQI</li>\r\n                            <i>(Cập nhật lần cuối: {new Date(data.dust.updateTime[data.dust.updateTime.length-1]).toLocaleString()})</i> \r\n                            <li>Nồng độ CO: {data.coGas.data[data.coGas.data.length-1]} AQI</li>\r\n                            <i>(Cập nhật lần cuối: {new Date(data.coGas.updateTime[data.coGas.updateTime.length-1]).toLocaleString()})</i> \r\n                            <li>Độ ẩm đất: {data.soilHumid.data[data.soilHumid.data.length-1]} %</li>\r\n                            <i>(Cập nhật lần cuối: {new Date(data.soilHumid.updateTime[data.soilHumid.updateTime.length-1]).toLocaleString()})</i> \r\n                        </ul>\r\n                    </Card.Body>\r\n\r\n                </Card>\r\n            </Accordion.Collapse>\r\n        </Accordion>\r\n    )\r\n}\r\n\r\nconst DeviceList = () => {\r\n    const { deviceState } = useContext(DeviceContext);\r\n    const [devicesData, setDevicesData] = useState({\r\n        data: [],\r\n        hoveredId: \"\",\r\n    });\r\n\r\n    useEffect(() => {\r\n        setDevicesData(deviceState);\r\n    },[deviceState])\r\n    \r\n    return (\r\n        <div className=\"device-list\">\r\n            <Form className=\"pt-2 m-1\">\r\n                <FormControl \r\n                    type=\"input\"\r\n                    placeholder=\"Filter\"\r\n                    className=\"mr-5\"\r\n                />\r\n            </Form>\r\n            {devicesData.data && devicesData.data.map((device: dataProps) => (\r\n                <DeviceItem key={device._id} data={device} hover={device._id === deviceState.hoveredId} />                \r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DeviceList;","import \"./marker.scss\";\r\nimport { Overlay, Popover} from \"react-bootstrap\"\r\nimport { useContext, useEffect, useRef, useState } from \"react\";\r\nimport { DeviceContext } from \"../../App\";\r\n\r\nconst DeviceMarker = (props: any) => {   \r\n    const { deviceState, setDeviceState } = useContext(DeviceContext)\r\n    const [ isHoverEffect, setIsHoverEffect ] = useState(false); \r\n    const { hover, $hover, highlight, data } = props;\r\n    const [ show, setShow] = useState(false);\r\n    const ref = useRef(null);\r\n\r\n    const handleClick = (event: any) => {\r\n        setShow(!show);\r\n    }\r\n\r\n    useEffect(() => {\r\n        setIsHoverEffect($hover);\r\n        setDeviceState({\r\n            ...deviceState,\r\n            hoveredId: $hover ? data._id : \"\",\r\n        })\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    },[$hover])\r\n\r\n    useEffect(() => {\r\n        setIsHoverEffect(hover);\r\n    },[hover,highlight])\r\n\r\n    useEffect(() => {\r\n        if(highlight)\r\n        setIsHoverEffect(highlight);\r\n    },[highlight])\r\n    return (\r\n        <div >\r\n            <i \r\n                className={`fa fa-map-marker marker-${data.alert? \"blink\":\"none\"}`} \r\n                style={{ \r\n                    fontSize: \"2.5em\",\r\n                    transform: (isHoverEffect||show)? \"scale(1.5,1.5) translate(0,-7px)\" : \"none\"\r\n                }}\r\n                ref={ref}\r\n                onClick={handleClick}\r\n            />\r\n            <Overlay\r\n                show={show||isHoverEffect}\r\n                target={ref.current}\r\n                placement=\"top\"\r\n                container={ref.current}\r\n                containerPadding={20}\r\n            >\r\n                <Popover id=\"popover-device\">\r\n                    <Popover.Title style={{color: \"black\", fontWeight:\"bold\"}}>\r\n                        {data.name}\r\n                    </Popover.Title>\r\n                    <Popover.Content>\r\n                        {data.lat[data.lat.length-1]},{data.long.length-1}\r\n                    </Popover.Content>\r\n                </Popover>\r\n            </Overlay>     \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DeviceMarker;","import \"./map.scss\";\r\nimport GoogleMap from \"google-map-react\";\r\nimport { Device } from \"../DevicesList/index\"\r\nimport DeviceMarker from \"../Marker/index\";\r\nexport interface dataProps extends Device {\r\n  highlight: boolean;\r\n}\r\n\r\ninterface MapProps {\r\n  defaultCenter: {\r\n    lat: number;\r\n    lng: number;\r\n  }\r\n  defaultZoom: number;\r\n  apiKey: string;\r\n  data: {\r\n    data: dataProps[],\r\n    hoveredId: string;\r\n  };\r\n}\r\n\r\nconst Map = (props: MapProps) => {\r\n  return (\r\n    <div className=\"google-map\">\r\n      <GoogleMap\r\n        bootstrapURLKeys={{ key: props.apiKey }}\r\n        defaultCenter = {props.defaultCenter}\r\n        defaultZoom={props.defaultZoom}\r\n        hoverDistance={30}\r\n      >\r\n        {props.data.data && props.data.data.map((device: dataProps) => (\r\n          <DeviceMarker \r\n            key={device._id}\r\n            lat={device.lat[device.lat.length-1]} \r\n            lng={device.long[device.long.length-1]} \r\n            data={device} \r\n            highlight={device.highlight} \r\n            hover={props.data.hoveredId === device._id}\r\n          />\r\n        ))}\r\n      </GoogleMap>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Map;\r\n","import { Card } from \"react-bootstrap\"\r\nimport \"./counterHeader.scss\"\r\nconst CounterHeader = (props: any) => {\r\n    const { data } = props;\r\n    const totalDevices = data?.data?.length;\r\n    const alertDevices = data?.data?.filter((device: any) => device?.alert === true).length;\r\n    const workingDevices = (totalDevices && alertDevices)? totalDevices - alertDevices : 0;\r\n\r\n    return (\r\n        <div className=\"statistic-header\">\r\n            <Card className=\"statistic-item px-2\" id=\"total-counter\">\r\n                <Card.Title className=\"statistic-title\">\r\n                    Total Devices\r\n                </Card.Title>\r\n                <Card.Text className=\"statistic-counter\">{totalDevices}</Card.Text>\r\n            </Card>\r\n            <Card className=\"statistic-item px-2\" id=\"working-counter\">\r\n                <Card.Title className=\"statistic-title\">\r\n                    Working Devices\r\n                </Card.Title>\r\n                <Card.Text className=\"statistic-counter\">{workingDevices}</Card.Text>\r\n            </Card>\r\n            <Card className=\"statistic-item px-2\" id=\"alert-counter\">\r\n                <Card.Title className=\"statistic-title\">\r\n                    Alert Devices\r\n                </Card.Title>\r\n                <Card.Text className=\"statistic-counter\">{alertDevices}</Card.Text>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CounterHeader;","import { useContext } from \"react\"\r\nimport { DeviceContext } from \"../../App\"\r\nimport DeviceList from \"../../components/DevicesList\"\r\nimport Map from \"../../components/Map\"\r\nimport Counter from \"../../components/CounterHeader\"\r\nimport \"./home.scss\"\r\n\r\nconst mapApiKey = process.env.REACT_APP_MAP_API_KEY;\r\n\r\nconst Home = () => {\r\n    const { deviceState } = useContext(DeviceContext);\r\n    return (\r\n        <div className=\"main-contain d-flex flex-row flex-wrap justify-content-flex-start\">\r\n          {/* <div className=\"flex-grow-1\">\r\n            <Chart />\r\n          </div> */}\r\n          <div className=\"pt-1 middle-content d-flex flex-column justify-content-flex-start\">\r\n            <Counter data={deviceState}/>\r\n            <Map\r\n              defaultCenter={{ lat: 21.14088, lng: 105.4953 }}\r\n              defaultZoom={15}\r\n              apiKey={mapApiKey!}\r\n              data={deviceState}\r\n            />\r\n          </div>\r\n          <div className=\"right-content\">\r\n            <DeviceList />\r\n          </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;","export const Marks = {\r\n    \"0\": \"0\",\r\n    \"100\": {\r\n        style: {\r\n            color: '#f50',\r\n        },\r\n        label: <strong>100</strong>,\r\n    },\r\n    \"50\": {\r\n        style: {\r\n            color: '#d4d106',\r\n        },\r\n        label: <strong>50</strong>,\r\n    },\r\n}\r\n\r\nexport const ThresholdColor = {\r\n    errorThreshold: \"#ff0040\",\r\n    safeThreshold: \"#00d9ff\",\r\n}\r\n\r\nexport const Properties = [\r\n    {\r\n        label: \"Nhiệt độ (°C)\",\r\n        value: \"temperature\",\r\n        marks: Marks,\r\n        thresholdColor: ThresholdColor,\r\n        graphType: \"bar\"\r\n    },\r\n    {\r\n        label: \"Độ ẩm (%)\",\r\n        value: \"humidity\",\r\n        marks: Marks,\r\n        thresholdColor: ThresholdColor,\r\n        graphType: \"bar\",\r\n    },\r\n    {\r\n        label: \"Mưa\",\r\n        value: \"rain\",\r\n        marks: Marks,\r\n        thresholdColor: ThresholdColor,\r\n        graphType: \"line\",\r\n    },\r\n    {\r\n        label: \"Độ bụi (AQI)\",\r\n        value: \"dust\",\r\n        marks: Marks,\r\n        thresholdColor: ThresholdColor,\r\n        graphType: \"bar\",\r\n    },\r\n    {\r\n        label: \"Nồng độ CO (AQI)\",\r\n        value: \"coGas\",\r\n        marks: Marks,\r\n        thresholdColor: ThresholdColor,\r\n        graphType: \"bar\",\r\n    },\r\n    {\r\n        label: \"Độ ẩm đất (%)\",\r\n        value: \"soilHumid\",\r\n        marks: Marks,\r\n        thresholdColor: ThresholdColor,\r\n        graphType: \"bar\",\r\n    },\r\n]\r\n\r\n","import \"./graph.scss\"\r\nimport { Bar } from \"react-chartjs-2\";\r\ninterface GraphProps {\r\n    data: any;\r\n    startDate: Date;\r\n    endDate: Date;\r\n    property: {\r\n        label: string,\r\n        value: string,\r\n        marks: any\r\n        thresholdColor: {\r\n            errorThreshold: string,\r\n            safeThreshold: string,\r\n        }\r\n        graphType: string,\r\n    };\r\n}\r\n\r\nconst Graph = (props: GraphProps) => {\r\n    const { data, startDate, endDate, property } = props;\r\n    let showData: any[] = []\r\n    let showLabels: any[] = [];\r\n    let showColors: any[] = [];\r\n\r\n    if(data && startDate && endDate) {\r\n        data[property.value].updateTime.forEach((time: any, index: number) => {\r\n            if(time <= new Date(endDate).toISOString() && time >= new Date(startDate).toISOString()) {\r\n                showLabels.push(new Date(time).toLocaleString())\r\n                showData.push(data[property.value].data[index]);\r\n                showColors.push(data[property.value].data[index] > data[property.value].threshold ? property.thresholdColor.errorThreshold: property.thresholdColor.safeThreshold);\r\n            }\r\n        });\r\n    }\r\n\r\n    const state = {\r\n        labels: showLabels,\r\n        datasets: [\r\n            {\r\n                // lineTension: 0.5,\r\n                // type: property.graphType,\r\n                label: property.label,\r\n                backgroundColor: showColors,\r\n                borderColor: '#535252',\r\n                borderWidth: 1,\r\n                data: showData,\r\n            }\r\n        ]\r\n    }\r\n    \r\n    return (\r\n        <div className=\"graph\">\r\n            <Bar\r\n                height={300}\r\n                width={350}\r\n                data={state}\r\n                options={{\r\n                    plugins: {\r\n                        title:{\r\n                            display:true,\r\n                            text: `Biểu đồ ${property.label}`,\r\n                            font: {\r\n                                size: 30\r\n                            },\r\n                            padding: 20\r\n                        },\r\n                        legend:{\r\n                            display: true,\r\n                            position:'bottom',\r\n                        },               \r\n                    },\r\n                    scales: {\r\n                        y: {\r\n                            type: 'linear',\r\n                            min: 0,\r\n                        }\r\n                    },\r\n                    responsive: true,\r\n                    maintainAspectRatio: false,\r\n                    // scales: {\r\n                    //     y: {\r\n                    //         title: \"jfjfjf\",\r\n                    //         ticks: {\r\n                    //             // Include a dollar sign in the ticks\r\n                    //             callback: function(value: any) {\r\n                    //                 return '$' + value;\r\n                    //             }\r\n                    //         }\r\n                    //     }\r\n                    // }\r\n                }}\r\n                type=\"bar\"\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Graph;","import \"./slider.scss\"\r\nimport { Button, Col, InputNumber, Modal, Row, Slider } from \"antd\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Device } from \"../DevicesList\";\r\nimport { SET_BORDER_THRESHOLD } from \"../DevicesList/commandSchema\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport { useMediaQuery } from \"react-responsive\";\r\ninterface ThresholdSlideItemProps {\r\n    data: Device,\r\n    property: {\r\n        label: string,\r\n        value: string,\r\n        marks?: any,\r\n    },\r\n}\r\n\r\nconst ThresholdSlideItem = (props: ThresholdSlideItemProps) => {\r\n    const { data, property } = props;\r\n    const [ updateThreshold ] = useMutation(SET_BORDER_THRESHOLD);\r\n    const [ inputValue, setInputValue ] = useState((data as any)[property.value].threshold);\r\n    const [ isDisableButton, setIsDisableButton ] = useState(true);\r\n    const isTabletOrMobile = useMediaQuery({query: '(max-width: 1224px)'})\r\n\r\n\r\n    useEffect(() => {\r\n        setInputValue((data as any)[property.value].threshold)\r\n    },[property,data])\r\n\r\n    \r\n    useEffect(() => {\r\n        setIsDisableButton(inputValue === (data as any)[property.value].threshold);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    },[inputValue]); \r\n\r\n    const handleOnChange = (value: number) => {\r\n        setInputValue(value)\r\n    }\r\n\r\n    const { confirm } = Modal;\r\n    const showConfirm = () => {\r\n        confirm({\r\n            title: 'Xác nhận điều chỉnh ngưỡng',\r\n            content: `${property.label} thay đổi chỉ số từ ${(data as any)[property.value].threshold} thành ${inputValue}`,\r\n            onOk() {\r\n                setIsDisableButton(true);\r\n                updateThreshold({\r\n                    variables: {\r\n                        value: inputValue,\r\n                        id: data._id,\r\n                        property: property.value,\r\n                    }\r\n                });\r\n            },\r\n            onCancel() {\r\n            },\r\n        });\r\n        \r\n    }\r\n\r\n    const handleClickReset = () => {\r\n        setIsDisableButton(false);\r\n        setInputValue((data as any)[property.value].threshold);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!isTabletOrMobile && (\r\n                <div className=\"thresholdSlideItem\">\r\n                <h3 className=\"\">Thiết lập ngưỡng cho phép</h3>\r\n                <h4 className=\"\">{property.label}</h4>\r\n                <Row>\r\n                    <Col span={8}>\r\n                        <div style={{display:'inline-block', height:'45vh', marginTop:\"4vh\"}}>\r\n                        <Slider\r\n                            min={0}\r\n                            max={100}\r\n                            onChange={handleOnChange}\r\n                            value={typeof inputValue === 'number' ? inputValue : 0}\r\n                            marks={property.marks}\r\n                            defaultValue={(data as any)[property.value].threshold}\r\n                            included\r\n                            vertical\r\n                            />\r\n                        </div>\r\n                    </Col>\r\n                    <Col span={8} style={{ margin: '0 16px' }}>\r\n                        <InputNumber\r\n                            min={0}\r\n                            max={100}\r\n                            className=\"my-5\"\r\n                            // formatter={value => `${value}`}\r\n                            value={inputValue}\r\n                            onChange={handleOnChange}\r\n                            />\r\n                        <Button\r\n                            style={{ marginBottom: '16px' }}\r\n                            type=\"primary\"\r\n                            onClick={showConfirm}\r\n                            disabled={isDisableButton}\r\n                            >\r\n                            Confirm\r\n                        </Button>\r\n                        <Button\r\n                            style={{ marginBottom: '16px' }}\r\n                            type=\"primary\"\r\n                            danger\r\n                            onClick={handleClickReset}\r\n                            >\r\n                            Reset\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n            )}\r\n            {isTabletOrMobile &&(\r\n                <div className=\"thresholdSlideItem\">\r\n                <h3 className=\"\">Thiết lập ngưỡng {property.label} cho phép</h3>\r\n                        <div style={{marginTop:\"8vh\", margin: \"0 20px\"}}>\r\n                        <Slider\r\n                            min={0}\r\n                            max={100}\r\n                            onChange={handleOnChange}\r\n                            value={typeof inputValue === 'number' ? inputValue : 0}\r\n                            marks={property.marks}\r\n                            defaultValue={(data as any)[property.value].threshold}\r\n                            included\r\n                            />\r\n                        </div>\r\n                        <InputNumber\r\n                            min={0}\r\n                            max={100}\r\n                            className=\"my-4\"\r\n                            style={{marginRight: \"50px\"}}\r\n                            // formatter={value => `${value}`}\r\n                            value={inputValue}\r\n                            onChange={handleOnChange}\r\n                            />\r\n                        <Button\r\n                            style={{ marginRight: '10px' }}\r\n                            type=\"primary\"\r\n                            onClick={showConfirm}\r\n                            disabled={isDisableButton}\r\n                            >\r\n                            Confirm\r\n                        </Button>\r\n                        <Button\r\n                            // style={{ marginBottom: '16px' }}\r\n                            type=\"primary\"\r\n                            danger\r\n                            onClick={handleClickReset}\r\n                            >\r\n                            Reset\r\n                        </Button>\r\n            </div>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ThresholdSlideItem;","import \"./index.scss\"\r\nimport moment from \"moment\";\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport { Form, FormGroup } from \"react-bootstrap\"\r\nimport { DeviceContext } from \"../../App\";\r\nimport { dataProps } from \"../../components/Map\";\r\nimport { DatePicker } from \"antd\";\r\nimport { Properties } from \"./custom\";\r\nimport Graph from \"../../components/Graph\";\r\nimport ThresholdSlideItem from \"../../components/ThresholdSlide\";\r\n\r\nconst StatisticsComponent = () => {\r\n    const { deviceState } = useContext(DeviceContext);\r\n    const { data } = deviceState;\r\n    const [ deviceIdChoose, setDeviceIdChoose ] = useState(0); \r\n    const [ propertyChoose, setPropertyChoose ] = useState(Properties[0]);\r\n    const handleDeviceChange = (e: any) => {\r\n        setDeviceIdChoose(e.target.value)\r\n    }\r\n\r\n    const handlePropertyChange = (e: any) => {\r\n        setPropertyChoose(Properties[e.target.value])\r\n    }\r\n    const [ startDate, setStartDate ] = useState<any>(null);\r\n    const [ endDate, setEndDate ] = useState<any>(null);    \r\n\r\n    useEffect(() => {\r\n        if(data && data[0] && !startDate && !endDate) {\r\n            setStartDate((data[deviceIdChoose][propertyChoose.value] as any).updateTime[0].toLocaleString());\r\n            setEndDate((data[deviceIdChoose][propertyChoose.value] as any).updateTime[(data[deviceIdChoose][propertyChoose.value]as any).updateTime.length-1].toLocaleString())\r\n        }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    },[data])\r\n\r\n    const handleOnChangeDate = (value: any, dateString: any) => {\r\n        // console.log(value,\"value\");\r\n        // console.log(dateString,\"string\");\r\n    }\r\n\r\n    const onOk = (value: any) => {\r\n        setStartDate(value[0]?._d)\r\n        setEndDate(value[1]?._d)\r\n    }\r\n    const disabledDate = (current: any) => {\r\n        return current > moment().endOf('day');\r\n    }\r\n\r\n    return (\r\n        <div className=\"d-flex flex-row justify-content-center flex-wrap\">\r\n            <div className=\"p-3 graphContainer\">\r\n                <Form className=\"selection-view\">\r\n                    <FormGroup className=\"selection-form\">\r\n                        <Form.Label>Chọn thiết bị</Form.Label>\r\n                        <Form.Control\r\n                            as=\"select\"\r\n                            type=\"name\"\r\n                            placeholder=\"Name\"\r\n                            className=\"\"\r\n                            onChange={handleDeviceChange}\r\n                        >\r\n                            {data && data.map((device: dataProps, index: number) => (\r\n                                <option key={device._id} value={index}>{device.name}</option>\r\n                            ))}\r\n                        </Form.Control>\r\n                    </FormGroup>\r\n                    <FormGroup className=\"selection-form\">\r\n                        <Form.Label>Chọn thông số</Form.Label>\r\n                        <Form.Control\r\n                            as=\"select\"\r\n                            type=\"property\"\r\n                            placeholder=\"Property\"\r\n                            className=\"\"\r\n                            onChange={handlePropertyChange}\r\n                        >\r\n                            {Properties.map((property: any, index: number) => (\r\n                                <option key={property.label} value={index}>{property.label}</option>\r\n                            ))}\r\n                        </Form.Control>\r\n                    </FormGroup>\r\n                    <FormGroup className=\"selection-form\">\r\n                        <Form.Label>Chọn khoảng thời gian</Form.Label>\r\n                        <Form.Text className=\"justify-self-flex-start d-flex\">\r\n                            <DatePicker.RangePicker \r\n                                showTime\r\n                                disabledDate={disabledDate}\r\n                                onChange={handleOnChangeDate}\r\n                                onOk={onOk}\r\n                            />\r\n                        </Form.Text>\r\n                    </FormGroup>\r\n                </Form>\r\n                {data && (\r\n                    <Graph\r\n                        data={data[deviceIdChoose]} \r\n                        startDate={startDate}\r\n                        endDate={endDate}\r\n                        property={propertyChoose}\r\n                    />\r\n                )}\r\n            </div>\r\n            <div className=\"setThresholdContainer\">\r\n                {data && data[deviceIdChoose] && propertyChoose.value !== \"rain\" && (\r\n                    <ThresholdSlideItem\r\n                        data={data[deviceIdChoose]}\r\n                        property={propertyChoose}\r\n                    />\r\n                )}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StatisticsComponent;","import { useQuery } from \"@apollo/client\";\r\nimport { createContext, useEffect, useState } from \"react\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport { Device } from \"./components/DevicesList\";\r\nimport { GET_BORDER_DEVICES } from \"./components/DevicesList/schema\";\r\nimport Header from \"./components/Header\";\r\nimport DevicesTable from \"./pages/DevicesTable\";\r\nimport Home from \"./pages/Home\";\r\nimport StatisticsComponent from \"./pages/Statistics\";\r\n\r\n\r\nexport const DeviceContext = createContext({\r\n  deviceState: {\r\n    data: [],\r\n    hoveredId: \"\",\r\n  },\r\n  setDeviceState: (() => {}) as any,\r\n});\r\n\r\nfunction App() {\r\n  const { data } = useQuery(GET_BORDER_DEVICES, {\r\n    pollInterval: 10000,\r\n  });\r\n  const [deviceState, setDeviceState] = useState({\r\n    data: [],\r\n    hoveredId: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    const updateData = data?.getBorderDevices.map((device: Device) => ({\r\n      ...device,\r\n      highlight: false,\r\n    }));\r\n    setDeviceState({\r\n      data: updateData,\r\n      hoveredId: \"\",\r\n    });\r\n  }, [data]);\r\n\r\n  return (\r\n    <DeviceContext.Provider value={{ deviceState, setDeviceState }}>\r\n      <div className=\"App\">\r\n        <div className=\"vh-100 mvw-100 m-0 flex-column flex no-wrap\">\r\n          <main className=\"flex-grow\">\r\n            <BrowserRouter>\r\n              <Header/>\r\n              <Switch>\r\n                {/* <Route path=\"/devices\">\r\n                  <DevicesTable/>\r\n                </Route> */}\r\n                <Route path=\"/statistics\">\r\n                  <StatisticsComponent/>\r\n                </Route>\r\n                <Route path=\"/\">\r\n                  <Home />\r\n                </Route>\r\n              </Switch>\r\n            </BrowserRouter>\r\n          </main>\r\n        </div>\r\n      </div>\r\n    </DeviceContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { ApolloClient, ApolloProvider, InMemoryCache } from '@apollo/client';\r\n\r\nconst client = new ApolloClient({\r\n  uri: process.env.REACT_APP_GRAPHQL_URI,\r\n  cache: new InMemoryCache(),\r\n});\r\n\r\nReactDOM.render(\r\n  <ApolloProvider client={client}>\r\n    <React.StrictMode>\r\n      <App />\r\n    </React.StrictMode>\r\n  </ApolloProvider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}