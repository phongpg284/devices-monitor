{"version":3,"sources":["components/DevicesList/schema.ts","components/Header/index.tsx","route-components/DevicesTable/index.tsx","components/DevicesList/commandSchema.ts","components/DevicesList/useLongPress.js","components/DevicesList/index.tsx","components/Marker/index.tsx","components/Map/index.tsx","components/CounterHeader/index.tsx","route-components/Home/index.tsx","route-components/Statistics/custom.js","components/Graph/index.tsx","components/ThresholdSlide/index.tsx","route-components/Statistics/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["ENVIRONMENT_UNIT","gql","GET_BORDER_DEVICES","Header","className","Navbar","bg","expand","Brand","href","Image","Toggle","aria-controls","Collapse","id","Nav","to","style","fontSize","Form","inline","FormControl","type","placeholder","aria-label","Button","variant","DevicesTable","deviceState","useContext","DeviceContext","useState","data","setData","useEffect","tableData","map","device","index","cordinate","lat","long","humidity","temperature","coGas","dust","soilHumid","rain","columns","dataField","text","sort","filter","textFilter","headerStyle","width","keyField","rowStyle","noDataIndication","striped","hover","condensed","filterFactory","pagination","paginationFactory","SEND_ALERT","UPDATE_BORDER_CYLINDER_STATUS","SET_BORDER_THRESHOLD","preventDefault","event","isTouchEvent","touches","length","useLongPress","onLongPress","onClick","onRelease","shouldPreventDefault","delay","longPressTriggered","setLongPressTriggered","timeout","useRef","target","start","useCallback","addEventListener","passive","current","setTimeout","clear","shouldTriggerClick","clearTimeout","removeEventListener","onMouseDown","e","onTouchStart","onMouseUp","onMouseLeave","onTouchEnd","DeviceItem","props","setDeviceState","useMutation","updateCylinder","sendAlert","isCollapse","setIsCollapse","updateState","hovereId","hoveredId","_id","highlight","confirm","console","log","variables","status","defaultOptions","longPressUpEvent","longPressDownEvent","Accordion","as","Card","eventKey","onPointerEnter","onPointerLeave","backgroundColor","Text","name","locationUpdateTime","paddingTop","Date","toLocaleString","icon","CaretUpOutlined","size","CaretDownOutlined","marginBottom","danger","disabled","alert","title","content","onOk","onCancel","Body","updateTime","DeviceList","devicesData","setDevicesData","DeviceMarker","isHoverEffect","setIsHoverEffect","$hover","show","setShow","ref","transform","Overlay","placement","container","containerPadding","Popover","Title","color","fontWeight","Content","Map","bootstrapURLKeys","key","apiKey","defaultCenter","defaultZoom","hoverDistance","lng","CounterHeader","totalDevices","alertDevices","workingDevices","Home","process","Marks","label","ThresholdColor","errorThreshold","safeThreshold","Properties","value","marks","thresholdColor","graphType","Graph","startDate","endDate","property","showData","showLabels","showColors","forEach","time","toISOString","push","threshold","state","labels","datasets","borderColor","borderWidth","height","options","plugins","display","font","padding","legend","position","scales","y","min","ThresholdSlideItem","updateThreshold","inputValue","setInputValue","isDisableButton","setIsDisableButton","handleOnChange","span","marginTop","max","onChange","defaultValue","included","vertical","margin","StatisticsComponent","deviceIdChoose","setDeviceIdChoose","propertyChoose","setPropertyChoose","setStartDate","setEndDate","FormGroup","Label","Control","RangePicker","showTime","disabledDate","moment","endOf","dateString","_d","ThresholdSlide","createContext","App","useQuery","pollInterval","updateData","getBorderDevices","Provider","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","client","ApolloClient","uri","cache","InMemoryCache","ReactDOM","render","ApolloProvider","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6995de30.chunk.js","sourcesContent":["import { gql } from \"@apollo/client\";\r\n\r\nexport const ENVIRONMENT_UNIT = gql`\r\n    fragment EnvironmentUnit on EnvironmentUnit {\r\n        data\r\n        threshold\r\n        updateTime\r\n    }\r\n`;\r\n\r\nexport const GET_BORDER_DEVICES = gql`\r\n    ${ENVIRONMENT_UNIT}\r\n    query GetBorderDevices {\r\n        getBorderDevices {\r\n            _id\r\n            name \r\n            lat\r\n            long\r\n            humidity {\r\n                ...EnvironmentUnit\r\n            }\r\n            temperature {\r\n                ...EnvironmentUnit\r\n            }\r\n            rain {\r\n                data\r\n                updateTime\r\n            } \r\n            dust {\r\n                ...EnvironmentUnit\r\n            }\r\n            coGas {\r\n                ...EnvironmentUnit\r\n            }\r\n            soilHumid {\r\n                ...EnvironmentUnit\r\n            }\r\n            cylinder \r\n            alert\r\n            locationUpdateTime\r\n        }\r\n    }\r\n`;\r\n\r\nexport const CREATE_BORDER_DEVICE = gql`\r\n    mutation CreateBorderDevice($input: BorderDeviceCreateInput) {\r\n        ${ENVIRONMENT_UNIT}\r\n        createBorderDevice(input: $input) {\r\n            _id\r\n            name \r\n            lat\r\n            long\r\n            humidity {\r\n                ...EnvironmentUnit\r\n            }\r\n            temperature {\r\n                ...EnvironmentUnit\r\n            }\r\n            rain {\r\n                data\r\n                updateTime\r\n            } \r\n            dust {\r\n                ...EnvironmentUnit\r\n            }\r\n            coGas {\r\n                ...EnvironmentUnit\r\n            }\r\n            soilHumid {\r\n                ...EnvironmentUnit\r\n            }\r\n            cylinder\r\n            alert\r\n            locationUpdateTime\r\n        }\r\n    }\r\n`;\r\n\r\nexport const UPDATE_BORDER_DEVICE = gql`\r\n    mutation UpdateBorderDevice($input: BorderDeviceUpdateInput) {\r\n        ${ENVIRONMENT_UNIT}\r\n        updateBorderDevice(input: $input) {\r\n            _id\r\n            name \r\n            lat\r\n            long\r\n            humidity {\r\n                ...EnvironmentUnit\r\n            }\r\n            temperature {\r\n                ...EnvironmentUnit\r\n            }\r\n            rain {\r\n                data\r\n                updateTime\r\n            } \r\n            dust {\r\n                ...EnvironmentUnit\r\n            }\r\n            coGas {\r\n                ...EnvironmentUnit\r\n            }\r\n            soilHumid {\r\n                ...EnvironmentUnit\r\n            }\r\n            cylinder\r\n            alert\r\n            locationUpdateTime\r\n        }\r\n    }\r\n`;","import \"./header.css\";\r\nimport React from \"react\";\r\nimport {\r\n  Button,\r\n  Form,\r\n  FormControl,\r\n  Image,\r\n  Nav,\r\n  Navbar,\r\n} from \"react-bootstrap\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\n\r\nconst Header: React.FC = () => {\r\n  return (\r\n    <header className=\"border-bottom\">\r\n      <Navbar bg=\"light\" expand=\"lg\" className=\"p-0 px-2\">\r\n        <Navbar.Brand href=\"/\" className=\"p-0\">\r\n          <Image className=\"header__logo\" />\r\n        </Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          <Nav className=\"ml-auto d-flex align-items-center\">\r\n            <NavLink to=\"/\" className=\"px-3\" style={{fontSize: \"1.2rem\"}}>Home</NavLink>\r\n            <NavLink to=\"/devices\" className=\"px-3\" style={{fontSize: \"1.2rem\"}}>Thiết bị</NavLink>\r\n            <NavLink to=\"/statistics\" className=\"px-3\" style={{fontSize: \"1.2rem\"}}>Dữ liệu</NavLink>\r\n            <NavLink to=\"/\" className=\"px-3 mr-3\" style={{fontSize: \"1.2rem\"}}>About</NavLink>\r\n          </Nav>\r\n          <Form inline className=\"mr-5\">\r\n            <FormControl\r\n              type=\"search\"\r\n              placeholder=\"Search\"\r\n              className=\"mr-2\"\r\n              aria-label=\"Search\"\r\n            />\r\n            <Button variant=\"outline-success\">Search</Button>\r\n          </Form>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import \"./devices.scss\"\r\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\r\nimport 'react-bootstrap-table2-filter/dist/react-bootstrap-table2-filter.min.css';\r\nimport 'react-bootstrap-table2-paginator/dist/react-bootstrap-table2-paginator.min.css';\r\n\r\nimport filterFactory, { textFilter } from \"react-bootstrap-table2-filter\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport { DeviceContext } from \"../../App\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport { dataProps } from \"../../components/Map\";\r\n\r\nconst DevicesTable = () => {\r\n    const { deviceState } = useContext(DeviceContext);\r\n    const [ data, setData ] = useState([]);\r\n    \r\n    useEffect(() => {\r\n        const tableData = deviceState.data?.map((device: dataProps, index: number) => {\r\n            return {\r\n                ...device,\r\n                cordinate: `${device.lat[0]},${device.long[0]}`,\r\n                id: index,\r\n                humidity: device.humidity.data[0],\r\n                temperature: device.temperature.data[0],\r\n                coGas: device.coGas.data[0],\r\n                dust: device.dust.data[0],\r\n                soilHumid: device.soilHumid.data[0],\r\n                rain: device.rain? \"Có\" : \"Không\",\r\n                // lastUpdated: new Date(device.updateTime[0]).toString()\r\n            }\r\n        }) \r\n        if(tableData)\r\n        setData(tableData as any);\r\n    },[deviceState]);\r\n    \r\n    \r\n    const columns = [{\r\n        dataField: 'id',\r\n        text: 'ID',\r\n        sort: true,\r\n        filter: textFilter(),\r\n        headerStyle: { width: '80px'},\r\n    }, {\r\n        dataField: 'name',\r\n        text: 'Tên thiết bị',\r\n        sort: true,\r\n        filter: textFilter(),\r\n    }, {\r\n        dataField: 'cordinate',\r\n        text: 'Toạ độ',\r\n        sort: true,\r\n        filter: textFilter(),\r\n        headerStyle: { width: '180px' }\r\n    }, {\r\n        dataField: 'temperature',\r\n        text: 'Nhiệt độ (°C)',\r\n        sort: true,\r\n        filter: textFilter(),\r\n    }, {\r\n        dataField: 'humidity',\r\n        text: 'Độ ẩm (%)',\r\n        sort: true,\r\n        filter: textFilter(),\r\n    }, {\r\n        dataField: 'rain',\r\n        text: 'Mưa',\r\n        sort: true,\r\n        filter: textFilter(),\r\n    }, {\r\n        dataField: 'dust',\r\n        text: 'Độ bụi (mg/m3)',\r\n        sort: true,\r\n        filter: textFilter(),\r\n    }, {\r\n        dataField: 'coGas',\r\n        text: 'Nồng độ CO (ppm)',\r\n        sort: true,\r\n        filter: textFilter(),\r\n    }, {\r\n        dataField: 'soilHumid',\r\n        text: 'Độ ẩm đất (%)',\r\n        sort: true,\r\n        filter: textFilter(),\r\n    }];\r\n    return (\r\n        <div className=\"p-2\">\r\n            <BootstrapTable \r\n                keyField=\"id\" \r\n                data={data} \r\n                columns={columns}\r\n                rowStyle={{}}\r\n                noDataIndication={ \"Table is empty\" }\r\n                striped\r\n                hover\r\n                condensed\r\n                filter={filterFactory()}\r\n                pagination= {paginationFactory({})}\r\n            >\r\n            </BootstrapTable>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DevicesTable;","import { gql } from \"@apollo/client\";\r\n\r\nexport const ENVIRONMENT_UNIT = gql`\r\n    fragment EnvironmentUnit on EnvironmentUnit {\r\n        data\r\n        threshold\r\n        updateTime\r\n    }\r\n`;\r\n\r\nexport const SEND_ALERT = gql`\r\n    ${ENVIRONMENT_UNIT}\r\n    mutation SendAlert($id: String!) {\r\n        sendAlert(id: $id) {\r\n            _id\r\n            name \r\n            lat\r\n            long\r\n            humidity {\r\n                ...EnvironmentUnit\r\n            }\r\n            temperature {\r\n                ...EnvironmentUnit\r\n            }\r\n            rain {\r\n                data\r\n                updateTime\r\n            } \r\n            dust {\r\n                ...EnvironmentUnit\r\n            }\r\n            coGas {\r\n                ...EnvironmentUnit\r\n            }\r\n            soilHumid {\r\n                ...EnvironmentUnit\r\n            }\r\n            cylinder\r\n            alert\r\n            locationUpdateTime\r\n        }\r\n    }\r\n`;\r\n\r\nexport const UPDATE_BORDER_CYLINDER_STATUS = gql`\r\n    ${ENVIRONMENT_UNIT}\r\n    mutation UpdateBorderCylinderStatus($id: String!, $status: String!) {\r\n        updateBorderCylinderStatus(id: $id, status: $status) {\r\n            _id\r\n            name \r\n            lat\r\n            long\r\n            humidity {\r\n                ...EnvironmentUnit\r\n            }\r\n            temperature {\r\n                ...EnvironmentUnit\r\n            }\r\n            rain {\r\n                data\r\n                updateTime\r\n            } \r\n            dust {\r\n                ...EnvironmentUnit\r\n            }\r\n            coGas {\r\n                ...EnvironmentUnit\r\n            }\r\n            soilHumid {\r\n                ...EnvironmentUnit\r\n            }\r\n            cylinder\r\n            alert\r\n            locationUpdateTime\r\n        }\r\n    }\r\n`;\r\n\r\nexport const SET_BORDER_THRESHOLD = gql`\r\n    ${ENVIRONMENT_UNIT}\r\n    mutation SetBorderThreshold($id: String!, $property: String! $value: Float!) {\r\n        setBorderThreshold(id: $id, property: $property, value: $value) {\r\n            _id\r\n            name \r\n            lat\r\n            long\r\n            humidity {\r\n                ...EnvironmentUnit\r\n            }\r\n            temperature {\r\n                ...EnvironmentUnit\r\n            }\r\n            rain {\r\n                data\r\n                updateTime\r\n            } \r\n            dust {\r\n                ...EnvironmentUnit\r\n            }\r\n            coGas {\r\n                ...EnvironmentUnit\r\n            }\r\n            soilHumid {\r\n                ...EnvironmentUnit\r\n            }\r\n            cylinder\r\n            alert\r\n            locationUpdateTime\r\n        }\r\n    }\r\n`;","import { useCallback, useRef, useState } from \"react\";\r\n\r\nconst useLongPress = (\r\n    onLongPress,\r\n    onClick,\r\n    onRelease,\r\n    { shouldPreventDefault = true, delay = 300 } = {}\r\n    ) => {\r\n    const [longPressTriggered, setLongPressTriggered] = useState(false);\r\n    const timeout = useRef();\r\n    const target = useRef();\r\n\r\n    const start = useCallback(\r\n        event => {\r\n            if (shouldPreventDefault && event.target) {\r\n                    event.target.addEventListener(\"touchend\", preventDefault, {\r\n                    passive: false\r\n                });\r\n                target.current = event.target;\r\n            }\r\n            timeout.current = setTimeout(() => {\r\n                onLongPress(event);\r\n                setLongPressTriggered(true);\r\n            }, delay);\r\n        },\r\n        [onLongPress, delay, shouldPreventDefault]\r\n    );\r\n\r\n    const clear = useCallback(\r\n        (event, shouldTriggerClick = true) => {\r\n            timeout.current && clearTimeout(timeout.current);\r\n            shouldTriggerClick && !longPressTriggered && onClick();\r\n            shouldTriggerClick && longPressTriggered && onRelease();\r\n            setLongPressTriggered(false);\r\n            if (shouldPreventDefault && target.current) {\r\n                target.current.removeEventListener(\"touchend\", preventDefault);\r\n            }\r\n        },\r\n        [shouldPreventDefault, onClick, onRelease, longPressTriggered]\r\n    );\r\n\r\n    return {\r\n        onMouseDown: e => start(e),\r\n        onTouchStart: e => start(e),\r\n        onMouseUp: e => clear(e),\r\n        onMouseLeave: e => clear(e, false),\r\n        onTouchEnd: e => clear(e)\r\n    };\r\n};\r\n\r\nconst isTouchEvent = event => {\r\nreturn \"touches\" in event;\r\n};\r\n\r\nconst preventDefault = event => {\r\nif (!isTouchEvent(event)) return;\r\n\r\nif (event.touches.length < 2 && event.preventDefault) {\r\n    event.preventDefault();\r\n}\r\n};\r\n\r\nexport default useLongPress;","import { Accordion, Card, Form, FormControl } from \"react-bootstrap\";\r\nimport { Button, Modal } from \"antd\"\r\nimport { CaretUpOutlined, CaretDownOutlined } from '@ant-design/icons';\r\nimport './devices.scss'\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport { DeviceContext } from \"../../App\";\r\nimport { dataProps } from \"../Map\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport { SEND_ALERT, UPDATE_BORDER_CYLINDER_STATUS } from \"./commandSchema\";\r\nimport useLongPress from \"./useLongPress\";\r\nimport { latLng2Tile } from \"google-map-react\";\r\n\r\nexport interface environmentUnit {\r\n    data: any[],\r\n    threshold: number,\r\n    updateTime: Date[]\r\n}\r\nexport interface Device {\r\n    _id: string,\r\n    name: string,\r\n    lat: number[],\r\n    long: number[],\r\n    temperature: environmentUnit,\r\n    humidity: environmentUnit,\r\n    rain: {\r\n        data: boolean[],\r\n        updateTime: Date[],\r\n    },\r\n    dust: environmentUnit,\r\n    coGas: environmentUnit,\r\n    soilHumid: environmentUnit,\r\n    cylinder: boolean,\r\n    alert: boolean,\r\n    locationUpdateTime: Date[],\r\n}\r\n\r\ninterface DeviceItemProps {\r\n    data: dataProps,\r\n    hover: boolean,\r\n}\r\n\r\nconst DeviceItem:React.FC<DeviceItemProps> = (props: DeviceItemProps) => {\r\n    const { deviceState, setDeviceState } = useContext(DeviceContext);\r\n    const [ updateCylinder ] = useMutation(UPDATE_BORDER_CYLINDER_STATUS);\r\n    const [ sendAlert ] = useMutation(SEND_ALERT);\r\n\r\n    const { data, hover } = props;\r\n    const [ isCollapse, setIsCollapse ] = useState(false);\r\n    \r\n    const handleToggle = () => {\r\n        setIsCollapse(!isCollapse);\r\n    }\r\n    \r\n    useEffect(() => {        \r\n        const updateState = {\r\n            hovereId: deviceState.hoveredId,\r\n            data: deviceState.data.map((device: dataProps) => {\r\n                if (device._id === data._id) \r\n                    return ({\r\n                        ...device,\r\n                        highlight: isCollapse\r\n                    })\r\n                return device \r\n            }),\r\n        }\r\n        setDeviceState(updateState)\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [isCollapse]);\r\n\r\n    const { confirm } = Modal;\r\n    const showAlertConfirm = () => {\r\n        confirm({\r\n            title: 'Xác nhận báo động thiết bị',\r\n            content: `Báo động thiết bị ${data.name}`,\r\n            onOk() {\r\n                sendAlert({\r\n                    variables: {\r\n                        id: data._id\r\n                    }\r\n                })\r\n            },\r\n            onCancel() {\r\n            },\r\n        });\r\n        \r\n    }\r\n\r\n    const handleHover = (e: any) => { \r\n        if(!isCollapse)\r\n        setDeviceState({\r\n            ...deviceState,\r\n            hoveredId: data._id,\r\n        });\r\n    }\r\n    const handleQuitHover= (e: any) => {\r\n        if(!isCollapse)\r\n        setDeviceState({\r\n            ...deviceState,\r\n            hoveredId: \"\",\r\n        })\r\n    }\r\n\r\n    const onLongPressUp = () => {\r\n        console.log('longpress up is triggered');\r\n        updateCylinder({\r\n            variables: {\r\n                id: data._id,\r\n                status: \"up\"\r\n            }\r\n        })\r\n    };\r\n    \r\n    const onLongPressDown = () => {\r\n        console.log('longpress down is triggered');\r\n        updateCylinder({\r\n            variables: {\r\n                id: data._id,\r\n                status: \"down\"\r\n            }\r\n        })\r\n    };\r\n    const onRelease = () => {\r\n        console.log('release up')\r\n        updateCylinder({\r\n            variables: {\r\n                id: data._id,\r\n                status: \"stop\"\r\n            }\r\n        })\r\n        \r\n    }\r\n    \r\n    const onClickUp = () => {\r\n        console.log('click up is triggered')\r\n    }\r\n    const onClickDown = () => {\r\n        console.log('click down is triggered')\r\n    }\r\n\r\n    const defaultOptions = {\r\n        shouldPreventDefault: true,\r\n        delay: 200,\r\n    };\r\n\r\n    const longPressUpEvent = useLongPress(onLongPressUp, onClickUp, onRelease, defaultOptions);\r\n    const longPressDownEvent = useLongPress(onLongPressDown, onClickDown, onRelease, defaultOptions);\r\n\r\n    return (\r\n        <Accordion>\r\n            <Accordion.Toggle \r\n                as={Card} \r\n                eventKey={data._id} \r\n                className=\"device-toogle\" \r\n                onPointerEnter={handleHover}\r\n                onPointerLeave={handleQuitHover}\r\n                onClick={handleToggle}\r\n                id={data._id}\r\n            >\r\n                <Card className=\"device-item justify-content-flex-start\" id={data._id} style={{backgroundColor: hover? \"#979ea3\": \"\"}}>\r\n                    <Card.Text as=\"div\" className=\"d-flex p-2 justify-content-space-between align-items-center\" id={data._id}>\r\n                        <i \r\n                            className=\"bi-wifi px-3 align-self-center d-flex\"\r\n                            style={{fontSize: \"2.8rem\"}}\r\n                        />\r\n                        <div className=\"my-2\">\r\n                            <h1 \r\n                                style={{fontSize: \"2.2rem\"}}\r\n                                className=\"mx-3\"\r\n                            >\r\n                                {data.name}\r\n                            </h1>\r\n                            {data.lat && data.long &&<h4 \r\n                                style={{fontSize: \"1.1rem\"}}\r\n                            >\r\n                                Vị trí: {data.lat[data.lat.length-1]}, {data.long[data.long.length-1]}\r\n                            </h4> }\r\n                            {data.locationUpdateTime && <i \r\n                                style={{fontSize: \"0.8rem\", paddingTop:\"4px\"}}\r\n                            >\r\n                                Cập nhật vị trí lần cuối: {new Date(data.locationUpdateTime[data.locationUpdateTime.length-1]).toLocaleString()}\r\n                            </i>}\r\n                        </div>  \r\n                        <div className=\"d-flex flex-column justify-content-center ml-auto mx-2\">\r\n                            <Button \r\n                                {...longPressUpEvent}\r\n                                icon={<CaretUpOutlined />}\r\n                                size=\"large\"\r\n                            />\r\n                            <Button \r\n                                {...longPressDownEvent}\r\n                                icon={<CaretDownOutlined />}\r\n                                size=\"large\"\r\n                            />\r\n                        </div>\r\n                        <Button\r\n                            style={{ marginBottom: '16px' }}\r\n                            type=\"primary\"\r\n                            danger\r\n                            disabled={data.alert}\r\n                            onClick={showAlertConfirm}\r\n                        >\r\n                            Alert\r\n                        </Button>\r\n                    {isCollapse && \r\n                        <i className=\"fa fa-sort-desc ml-auto mx-2 align-self-start pin\" />                \r\n                    }\r\n                    {!isCollapse && \r\n                        <i className=\"fa fa-sort-up ml-auto mx-2 align-self-start pin\" />                \r\n                    }\r\n                    </Card.Text>\r\n                </Card>\r\n            </Accordion.Toggle>\r\n            <Accordion.Collapse className=\"device-collapse\" eventKey={data._id}>\r\n                <Card className=\"device-collapse-content\">\r\n                    <Card.Body className=\"d-flex flex-row px-1\">\r\n                        <ul>\r\n                            <li>Nhiệt độ: {data.temperature.data[data.temperature.data.length-1]} °C</li>\r\n                            <i>(Cập nhật lần cuối: {new Date(data.temperature.updateTime[data.temperature.updateTime.length-1]).toLocaleString()})</i> \r\n                            <li>Độ ẩm: {data.humidity.data[data.humidity.data.length-1]} %</li>\r\n                            <i>(Cập nhật lần cuối: {new Date(data.humidity.updateTime[data.humidity.updateTime.length-1]).toLocaleString()})</i> \r\n                            <li>Mưa: {data.rain.data[data.rain.data.length-1] ? `Có`: `Không`}</li>\r\n                            <i>(Cập nhật lần cuối: {new Date(data.rain.updateTime[data.rain.updateTime.length-1]).toLocaleString()})</i> \r\n                        </ul>    \r\n                        <ul className=\"pr-4\">\r\n                            <li>Độ bụi: {data.dust.data[data.dust.data.length-1]} mg/m3</li>\r\n                            <i>(Cập nhật lần cuối: {new Date(data.dust.updateTime[data.dust.updateTime.length-1]).toLocaleString()})</i> \r\n                            <li>Nồng độ CO: {data.coGas.data[data.coGas.data.length-1]} ppm</li>\r\n                            <i>(Cập nhật lần cuối: {new Date(data.coGas.updateTime[data.coGas.updateTime.length-1]).toLocaleString()})</i> \r\n                            <li>Độ ẩm đất: {data.soilHumid.data[data.soilHumid.data.length-1]} %</li>\r\n                            <i>(Cập nhật lần cuối: {new Date(data.soilHumid.updateTime[data.soilHumid.updateTime.length-1]).toLocaleString()})</i> \r\n                        </ul>\r\n                    </Card.Body>\r\n\r\n                </Card>\r\n            </Accordion.Collapse>\r\n        </Accordion>\r\n    )\r\n}\r\n\r\nconst DeviceList = () => {\r\n    const { deviceState } = useContext(DeviceContext);\r\n    const [devicesData, setDevicesData] = useState({\r\n        data: [],\r\n        hoveredId: \"\",\r\n    });\r\n\r\n    useEffect(() => {\r\n        setDevicesData(deviceState);\r\n    },[deviceState])\r\n    \r\n    return (\r\n        <div className=\"device-list\">\r\n            <Form className=\"pt-2 m-1\">\r\n                <FormControl \r\n                    type=\"input\"\r\n                    placeholder=\"Filter\"\r\n                    className=\"mr-5\"\r\n                />\r\n            </Form>\r\n            {devicesData.data && devicesData.data.map((device: dataProps) => (\r\n                <DeviceItem key={device._id} data={device} hover={device._id === deviceState.hoveredId} />                \r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DeviceList;","import \"./marker.scss\";\r\nimport { Overlay, Popover} from \"react-bootstrap\"\r\nimport { useContext, useEffect, useRef, useState } from \"react\";\r\nimport { DeviceContext } from \"../../App\";\r\n\r\nconst DeviceMarker = (props: any) => {   \r\n    const { deviceState, setDeviceState } = useContext(DeviceContext)\r\n    const [ isHoverEffect, setIsHoverEffect ] = useState(false); \r\n    const { hover, $hover, highlight, data } = props;\r\n    const [ show, setShow] = useState(false);\r\n    const ref = useRef(null);\r\n\r\n    const handleClick = (event: any) => {\r\n        setShow(!show);\r\n    }\r\n\r\n    useEffect(() => {\r\n        setIsHoverEffect($hover);\r\n        setDeviceState({\r\n            ...deviceState,\r\n            hoveredId: $hover ? data._id : \"\",\r\n        })\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    },[$hover])\r\n\r\n    useEffect(() => {\r\n        setIsHoverEffect(hover);\r\n    },[hover,highlight])\r\n\r\n    useEffect(() => {\r\n        if(highlight)\r\n        setIsHoverEffect(highlight);\r\n    },[highlight])\r\n    return (\r\n        <div >\r\n            <i \r\n                className={`fa fa-map-marker marker-${data.alert? \"blink\":\"none\"}`} \r\n                style={{ \r\n                    fontSize: \"2.5em\",\r\n                    transform: (isHoverEffect||show)? \"scale(1.5,1.5) translate(0,-7px)\" : \"none\"\r\n                }}\r\n                ref={ref}\r\n                onClick={handleClick}\r\n            />\r\n            <Overlay\r\n                show={show||isHoverEffect}\r\n                target={ref.current}\r\n                placement=\"top\"\r\n                container={ref.current}\r\n                containerPadding={20}\r\n            >\r\n                <Popover id=\"popover-device\">\r\n                    <Popover.Title style={{color: \"black\", fontWeight:\"bold\"}}>\r\n                        {data.name}\r\n                    </Popover.Title>\r\n                    <Popover.Content>\r\n                        {data.lat[data.lat.length-1]},{data.long.length-1}\r\n                    </Popover.Content>\r\n                </Popover>\r\n            </Overlay>     \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DeviceMarker;","import \"./map.scss\";\r\nimport GoogleMap from \"google-map-react\";\r\nimport { Device } from \"../DevicesList/index\"\r\nimport DeviceMarker from \"../Marker/index\";\r\nexport interface dataProps extends Device {\r\n  highlight: boolean;\r\n}\r\n\r\ninterface MapProps {\r\n  defaultCenter: {\r\n    lat: number;\r\n    lng: number;\r\n  }\r\n  defaultZoom: number;\r\n  apiKey: string;\r\n  data: {\r\n    data: dataProps[],\r\n    hoveredId: string;\r\n  };\r\n}\r\n\r\nconst Map = (props: MapProps) => {\r\n  return (\r\n    <div className=\"google-map\">\r\n      <GoogleMap\r\n        bootstrapURLKeys={{ key: props.apiKey }}\r\n        defaultCenter = {props.defaultCenter}\r\n        defaultZoom={props.defaultZoom}\r\n        hoverDistance={30}\r\n      >\r\n        {props.data.data && props.data.data.map((device: dataProps) => (\r\n          <DeviceMarker \r\n            key={device._id}\r\n            lat={device.lat[device.lat.length-1]} \r\n            lng={device.long[device.long.length-1]} \r\n            data={device} \r\n            highlight={device.highlight} \r\n            hover={props.data.hoveredId === device._id}\r\n          />\r\n        ))}\r\n      </GoogleMap>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Map;\r\n","import { Card } from \"react-bootstrap\"\r\nimport \"./counterHeader.scss\"\r\nconst CounterHeader = (props: any) => {\r\n    const { data } = props;\r\n    const totalDevices = data?.data?.length;\r\n    const alertDevices = data?.data?.filter((device: any) => device?.alert === true).length;\r\n    const workingDevices = (totalDevices && alertDevices)? totalDevices - alertDevices : 0;\r\n\r\n    return (\r\n        <div className=\"d-flex flex-row justify-content-center statistic-header\">\r\n            <Card className=\"statistic-item px-2\" id=\"total-counter\">\r\n                <Card.Title className=\"statistic-title\">\r\n                    Total Devices\r\n                </Card.Title>\r\n                <Card.Text className=\"statistic-counter\">{totalDevices}</Card.Text>\r\n            </Card>\r\n            <Card className=\"statistic-item px-2\" id=\"working-counter\">\r\n                <Card.Title className=\"statistic-title\">\r\n                    Working Devices\r\n                </Card.Title>\r\n                <Card.Text className=\"statistic-counter\">{workingDevices}</Card.Text>\r\n            </Card>\r\n            <Card className=\"statistic-item px-2\" id=\"alert-counter\">\r\n                <Card.Title className=\"statistic-title\">\r\n                    Alert Devices\r\n                </Card.Title>\r\n                <Card.Text className=\"statistic-counter\">{alertDevices}</Card.Text>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CounterHeader;","import { useContext } from \"react\"\r\nimport { DeviceContext } from \"../../App\"\r\nimport DeviceList from \"../../components/DevicesList\"\r\nimport Map from \"../../components/Map\"\r\nimport Counter from \"../../components/CounterHeader\"\r\nimport \"./home.scss\"\r\n\r\nconst mapApiKey = process.env.REACT_APP_MAP_API_KEY;\r\n\r\nconst Home = () => {\r\n    const { deviceState } = useContext(DeviceContext);\r\n    return (\r\n        <div className=\"main-contain d-flex justify-content-flex-start\">\r\n            {/* <div className=\"flex-grow-1\">\r\n              <Chart />\r\n            </div> */}\r\n            <div className=\"flex-grow-1 pt-1 middle-content d-flex flex-column justify-content-flex-start\">\r\n              <Counter data={deviceState}/>\r\n              <Map\r\n                defaultCenter={{ lat: 21.04, lng: 105.83 }}\r\n                defaultZoom={15}\r\n                apiKey={mapApiKey!}\r\n                data={deviceState}\r\n              />\r\n            </div>\r\n            <div className=\"flex-grow-1 right-content\">\r\n              <DeviceList />\r\n            </div>\r\n          </div>\r\n    )\r\n}\r\n\r\nexport default Home;","export const Marks = {\r\n    \"0\": \"0\",\r\n    \"100\": {\r\n        style: {\r\n            color: '#f50',\r\n        },\r\n        label: <strong>100</strong>,\r\n    },\r\n    \"50\": {\r\n        style: {\r\n            color: '#d4d106',\r\n        },\r\n        label: <strong>50</strong>,\r\n    },\r\n}\r\n\r\nexport const ThresholdColor = {\r\n    errorThreshold: \"#ff0040\",\r\n    safeThreshold: \"#00d9ff\",\r\n}\r\n\r\nexport const Properties = [\r\n    {\r\n        label: \"Nhiệt độ (°C)\",\r\n        value: \"temperature\",\r\n        marks: Marks,\r\n        thresholdColor: ThresholdColor,\r\n        graphType: \"bar\"\r\n    },\r\n    {\r\n        label: \"Độ ẩm (%)\",\r\n        value: \"humidity\",\r\n        marks: Marks,\r\n        thresholdColor: ThresholdColor,\r\n        graphType: \"bar\",\r\n    },\r\n    {\r\n        label: \"Mưa\",\r\n        value: \"rain\",\r\n        marks: Marks,\r\n        thresholdColor: ThresholdColor,\r\n        graphType: \"line\",\r\n    },\r\n    {\r\n        label: \"Độ bụi (mg/m3)\",\r\n        value: \"dust\",\r\n        marks: Marks,\r\n        thresholdColor: ThresholdColor,\r\n        graphType: \"bar\",\r\n    },\r\n    {\r\n        label: \"Nồng độ CO (ppm)\",\r\n        value: \"coGas\",\r\n        marks: Marks,\r\n        thresholdColor: ThresholdColor,\r\n        graphType: \"bar\",\r\n    },\r\n    {\r\n        label: \"Độ ẩm đất (%)\",\r\n        value: \"soilHumid\",\r\n        marks: Marks,\r\n        thresholdColor: ThresholdColor,\r\n        graphType: \"bar\",\r\n    },\r\n]\r\n\r\n","import { Bar } from \"react-chartjs-2\";\r\n\r\ninterface GraphProps {\r\n    data: any;\r\n    startDate: Date;\r\n    endDate: Date;\r\n    property: {\r\n        label: string,\r\n        value: string,\r\n        marks: any\r\n        thresholdColor: {\r\n            errorThreshold: string,\r\n            safeThreshold: string,\r\n        }\r\n        graphType: string,\r\n    };\r\n}\r\n\r\nconst Graph = (props: GraphProps) => {\r\n    const { data, startDate, endDate, property } = props;\r\n    let showData: any[] = []\r\n    let showLabels: any[] = [];\r\n    let showColors: any[] = [];\r\n\r\n    if(data && startDate && endDate) {\r\n        data[property.value].updateTime.forEach((time: any, index: number) => {\r\n            if(time <= new Date(endDate).toISOString() && time >= new Date(startDate).toISOString()) {\r\n                showLabels.push(new Date(time).toLocaleString())\r\n                showData.push(data[property.value].data[index]);\r\n                showColors.push(data[property.value].data[index] > data[property.value].threshold ? property.thresholdColor.errorThreshold: property.thresholdColor.safeThreshold);\r\n            }\r\n        });\r\n    }\r\n\r\n    const state = {\r\n        labels: showLabels,\r\n        datasets: [\r\n            {\r\n                // lineTension: 0.5,\r\n                // type: property.graphType,\r\n                label: property.label,\r\n                backgroundColor: showColors,\r\n                borderColor: '#535252',\r\n                borderWidth: 1,\r\n                data: showData,\r\n            }\r\n        ]\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            <Bar\r\n                // style={{margin: \"0px\"}}\r\n                height={400}\r\n                width={550}\r\n                data={state}\r\n                options={{\r\n                    plugins: {\r\n                        title:{\r\n                            display:true,\r\n                            text: `Biểu đồ ${property.label}`,\r\n                            font: {\r\n                                size: 30\r\n                            },\r\n                            padding: 20\r\n                        },\r\n                        legend:{\r\n                            display:true,\r\n                            position:'bottom',\r\n                        },               \r\n                    },\r\n                    scales: {\r\n                        y: {\r\n                            type: 'linear',\r\n                            min: 0,\r\n                        }\r\n                    }\r\n                    // scales: {\r\n                    //     y: {\r\n                    //         title: \"jfjfjf\",\r\n                    //         ticks: {\r\n                    //             // Include a dollar sign in the ticks\r\n                    //             callback: function(value: any) {\r\n                    //                 return '$' + value;\r\n                    //             }\r\n                    //         }\r\n                    //     }\r\n                    // }\r\n                }}\r\n                type=\"bar\"\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Graph;","import { Button, Col, InputNumber, Modal, Row, Slider } from \"antd\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Device } from \"../DevicesList\";\r\nimport { SET_BORDER_THRESHOLD } from \"../DevicesList/commandSchema\";\r\nimport { useMutation } from \"@apollo/client\";\r\ninterface ThresholdSlideItemProps {\r\n    data: Device,\r\n    property: {\r\n        label: string,\r\n        value: string,\r\n        marks?: any,\r\n    },\r\n}\r\n\r\nconst ThresholdSlideItem = (props: ThresholdSlideItemProps) => {\r\n    const { data, property } = props;\r\n    const [ updateThreshold ] = useMutation(SET_BORDER_THRESHOLD);\r\n    const [ inputValue, setInputValue ] = useState((data as any)[property.value].threshold);\r\n    const [ isDisableButton, setIsDisableButton ] = useState(true);\r\n    \r\n    useEffect(() => {\r\n        setInputValue((data as any)[property.value].threshold)\r\n    },[property,data])\r\n\r\n    \r\n    useEffect(() => {\r\n        setIsDisableButton(inputValue === (data as any)[property.value].threshold);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    },[inputValue]); \r\n\r\n    const handleOnChange = (value: number) => {\r\n        setInputValue(value)\r\n    }\r\n\r\n    const { confirm } = Modal;\r\n    const showConfirm = () => {\r\n        confirm({\r\n            title: 'Xác nhận điều chỉnh ngưỡng',\r\n            content: `${property.label} thay đổi chỉ số từ ${(data as any)[property.value].threshold} thành ${inputValue}`,\r\n            onOk() {\r\n                setIsDisableButton(true);\r\n                updateThreshold({\r\n                    variables: {\r\n                        value: inputValue,\r\n                        id: data._id,\r\n                        property: property.value,\r\n                    }\r\n                });\r\n            },\r\n            onCancel() {\r\n            },\r\n        });\r\n        \r\n    }\r\n\r\n    const handleClickReset = () => {\r\n        setIsDisableButton(false);\r\n        setInputValue((data as any)[property.value].threshold);\r\n    }\r\n\r\n    return (\r\n        <div className=\"thresholdSlideItem\">\r\n            <h3 className=\"\">Thiết lập ngưỡng cho phép</h3>\r\n            <h4 className=\"\">{property.label}</h4>\r\n            <Row>\r\n                <Col span={8}>\r\n                    <div style={{display:'inline-block', height:'45vh', marginTop:\"4vh\"}}>\r\n                    <Slider\r\n                        min={0}\r\n                        max={100}\r\n                        onChange={handleOnChange}\r\n                        value={typeof inputValue === 'number' ? inputValue : 0}\r\n                        marks={property.marks}\r\n                        defaultValue={(data as any)[property.value].threshold}\r\n                        included\r\n                        vertical\r\n                    />\r\n                    </div>\r\n                </Col>\r\n                <Col span={8} style={{ margin: '0 16px' }}>\r\n                    <InputNumber\r\n                        min={0}\r\n                        max={100}\r\n                        className=\"my-5\"\r\n                        // formatter={value => `${value}`}\r\n                        value={inputValue}\r\n                        onChange={handleOnChange}\r\n                    />\r\n                    <Button\r\n                        style={{ marginBottom: '16px' }}\r\n                        type=\"primary\"\r\n                        onClick={showConfirm}\r\n                        disabled={isDisableButton}\r\n                    >\r\n                        Confirm\r\n                    </Button>\r\n                    <Button\r\n                        style={{ marginBottom: '16px' }}\r\n                        type=\"primary\"\r\n                        danger\r\n                        onClick={handleClickReset}\r\n                    >\r\n                        Reset\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ThresholdSlideItem;","import \"./index.scss\"\r\nimport moment from \"moment\";\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport { Form, FormGroup } from \"react-bootstrap\"\r\nimport { DeviceContext } from \"../../App\";\r\nimport { dataProps } from \"../../components/Map\";\r\nimport { DatePicker } from \"antd\";\r\nimport { Properties } from \"./custom\";\r\nimport Graph from \"../../components/Graph\";\r\nimport ThresholdSlideItem from \"../../components/ThresholdSlide\";\r\n\r\nconst StatisticsComponent = () => {\r\n    const { deviceState } = useContext(DeviceContext);\r\n    const { data } = deviceState;\r\n    const [ deviceIdChoose, setDeviceIdChoose ] = useState(0); \r\n    const [ propertyChoose, setPropertyChoose ] = useState(Properties[0]);\r\n    const handleDeviceChange = (e: any) => {\r\n        setDeviceIdChoose(e.target.value)\r\n    }\r\n\r\n    const handlePropertyChange = (e: any) => {\r\n        setPropertyChoose(Properties[e.target.value])\r\n    }\r\n    const [ startDate, setStartDate ] = useState<any>(null);\r\n    const [ endDate, setEndDate ] = useState<any>(null);    \r\n\r\n    useEffect(() => {\r\n        if(data && data[0] && !startDate && !endDate) {\r\n            setStartDate((data[deviceIdChoose][propertyChoose.value] as any).updateTime[0].toLocaleString());\r\n            setEndDate((data[deviceIdChoose][propertyChoose.value] as any).updateTime[(data[deviceIdChoose][propertyChoose.value]as any).updateTime.length-1].toLocaleString())\r\n        }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    },[data])\r\n\r\n    const handleOnChangeDate = (value: any, dateString: any) => {\r\n        // console.log(value,\"value\");\r\n        // console.log(dateString,\"string\");\r\n    }\r\n\r\n    const onOk = (value: any) => {\r\n        setStartDate(value[0]?._d)\r\n        setEndDate(value[1]?._d)\r\n    }\r\n    const disabledDate = (current: any) => {\r\n        return current > moment().endOf('day');\r\n    }\r\n\r\n    return (\r\n        <div className=\"d-flex flex-row justify-content-center\">\r\n            <div className=\"p-3 graphContainer\">\r\n                <Form className=\"d-flex flex-row justify-content-center\">\r\n                    <FormGroup className=\"px-5\">\r\n                        <Form.Label>Chọn thiết bị</Form.Label>\r\n                        <Form.Control\r\n                            as=\"select\"\r\n                            type=\"name\"\r\n                            placeholder=\"Name\"\r\n                            className=\"\"\r\n                            onChange={handleDeviceChange}\r\n                        >\r\n                            {data && data.map((device: dataProps, index: number) => (\r\n                                <option key={device._id} value={index}>{device.name}</option>\r\n                            ))}\r\n                        </Form.Control>\r\n                    </FormGroup>\r\n                    <FormGroup className=\"px-5\">\r\n                        <Form.Label>Chọn thông số</Form.Label>\r\n                        <Form.Control\r\n                            as=\"select\"\r\n                            type=\"property\"\r\n                            placeholder=\"Property\"\r\n                            className=\"\"\r\n                            onChange={handlePropertyChange}\r\n                        >\r\n                            {Properties.map((property: any, index: number) => (\r\n                                <option key={property.label} value={index}>{property.label}</option>\r\n                            ))}\r\n                        </Form.Control>\r\n                    </FormGroup>\r\n                    <FormGroup className=\"px-5\">\r\n                        <Form.Label>Chọn khoảng thời gian</Form.Label>\r\n                        <Form.Text>\r\n                            <DatePicker.RangePicker \r\n                                showTime\r\n                                disabledDate={disabledDate}\r\n                                onChange={handleOnChangeDate}\r\n                                onOk={onOk}\r\n                            />\r\n                        </Form.Text>\r\n                    </FormGroup>\r\n                </Form>\r\n                {data && propertyChoose.value !== \"rain\" && (\r\n                    <Graph\r\n                        data={data[deviceIdChoose]} \r\n                        startDate={startDate}\r\n                        endDate={endDate}\r\n                        property={propertyChoose}\r\n                    />\r\n                )}\r\n                {data && propertyChoose.value === \"rain\" && (\r\n                    <Graph\r\n                    data={data[deviceIdChoose]} \r\n                    startDate={startDate}\r\n                    endDate={endDate}\r\n                    property={propertyChoose}\r\n                />\r\n                )}\r\n            </div>\r\n            <div className=\"setThresholdContainer\">\r\n                {data && data[deviceIdChoose] && propertyChoose.value !== \"rain\" && (\r\n                    <ThresholdSlideItem\r\n                        data={data[deviceIdChoose]}\r\n                        property={propertyChoose}\r\n                    />\r\n                )}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StatisticsComponent;","import { useQuery } from \"@apollo/client\";\r\nimport { createContext, useEffect, useState } from \"react\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport { Device } from \"./components/DevicesList\";\r\nimport { GET_BORDER_DEVICES } from \"./components/DevicesList/schema\";\r\nimport Header from \"./components/Header\";\r\nimport DevicesTable from \"./route-components/DevicesTable\";\r\nimport Home from \"./route-components/Home\";\r\nimport StatisticsComponent from \"./route-components/Statistics\";\r\n\r\n\r\nexport const DeviceContext = createContext({\r\n  deviceState: {\r\n    data: [],\r\n    hoveredId: \"\",\r\n  },\r\n  setDeviceState: (() => {}) as any,\r\n});\r\n\r\nfunction App() {\r\n  const { data } = useQuery(GET_BORDER_DEVICES, {\r\n    pollInterval: 10000,\r\n  });\r\n  const [deviceState, setDeviceState] = useState({\r\n    data: [],\r\n    hoveredId: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    const updateData = data?.getBorderDevices.map((device: Device) => ({\r\n      ...device,\r\n      highlight: false,\r\n    }));\r\n    setDeviceState({\r\n      data: updateData,\r\n      hoveredId: \"\",\r\n    });\r\n  }, [data]);\r\n\r\n  return (\r\n    <DeviceContext.Provider value={{ deviceState, setDeviceState }}>\r\n      <div className=\"App\">\r\n        <div className=\"vh-100 mvw-100 m-0 flex-column flex no-wrap\">\r\n          <main className=\"flex-grow\">\r\n            <BrowserRouter>\r\n              <Header/>\r\n              <Switch>\r\n                <Route path=\"/devices\">\r\n                  <DevicesTable/>\r\n                </Route>\r\n                <Route path=\"/statistics\">\r\n                  <StatisticsComponent/>\r\n                </Route>\r\n                <Route path=\"/\">\r\n                  <Home />\r\n                </Route>\r\n              </Switch>\r\n            </BrowserRouter>\r\n          </main>\r\n        </div>\r\n      </div>\r\n    </DeviceContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { ApolloClient, ApolloProvider, InMemoryCache } from '@apollo/client';\r\n\r\nconst client = new ApolloClient({\r\n  uri: process.env.REACT_APP_GRAPHQL_URI,\r\n  cache: new InMemoryCache(),\r\n});\r\n\r\nReactDOM.render(\r\n  <ApolloProvider client={client}>\r\n    <React.StrictMode>\r\n      <App />\r\n    </React.StrictMode>\r\n  </ApolloProvider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}