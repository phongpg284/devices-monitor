# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

type Device {
  _id: ID!
  alertButton: Boolean!
  coGas: [Float!]!
  downButton: Boolean!
  dust: [Float!]!
  humidity: [Float!]!
  lastUpdated: DateTime
  lat: [Float!]!
  long: [Float!]!
  name: String
  rain: [Float!]!
  soilHumid: [Float!]!
  temperature: [Float!]!
  upButton: Boolean!
}

input DeviceCreateInput {
  alertButton: Boolean!
  coGas: [Float!]
  downButton: Boolean
  dust: [Float!]
  humidity: [Float!]
  lat: [Float!]
  long: [Float!]
  name: String!
  rain: [Float!]
  soilHumid: [Float!]
  temperature: [Float!]
  upButton: Boolean
}

input DeviceUpdateInput {
  _id: ID!
  alertButton: Boolean!
  coGas: [Float!]
  downButton: Boolean
  dust: [Float!]
  humidity: [Float!]
  lat: [Float!]
  long: [Float!]
  name: String
  rain: [Float!]
  soilHumid: [Float!]
  temperature: [Float!]
  upButton: Boolean
}

type Mutation {
  createDevice(input: DeviceCreateInput): Device!
  motorDown(id: Float!): Device!
  motorUp(id: Float!): Device!
  mqttMessageHandler(data: String!, name: String!, topic: String!): Device!
  sendAlert(id: String!): Device!
}

type Query {
  getDevice(id: Float!): Device!
  getDevices: [Device!]!
}
