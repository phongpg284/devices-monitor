{"version":3,"sources":["component/Devices/schema.ts","component/Header/index.tsx","component/Statistics/custom.js","component/Graph/index.tsx","component/Statistics/setThresholdSchema.ts","component/ThresholdSlide/index.tsx","component/Statistics/index.tsx","component/ConfigSlide/index.tsx","component/ConfigTable/index.tsx","component/ConfigTable/setEngineSchema.ts","component/ConfigComponent/useLongPress.js","component/ConfigComponent/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["ENVIRONMENT_FEEDING_UNIT","gql","GET_FEEDING_DEVICES","Header","className","Navbar","bg","expand","variant","Brand","href","Image","Toggle","aria-controls","Collapse","id","Nav","to","style","fontSize","Form","inline","FormControl","type","placeholder","aria-label","Button","Marks","color","label","ThresholdColor","errorThreshold","safeThreshold","Properties","value","marks","maxValue","minValue","safeThresholeType","thresholdColor","Graph","props","data","startDate","endDate","property","showData","showLabels","showColors","updateTime","forEach","time","index","Date","toISOString","push","toLocaleString","threshold","state","labels","datasets","backgroundColor","borderColor","borderWidth","margin","height","width","options","plugins","title","display","text","font","size","padding","legend","position","SET_FEEDING_THRESHOLD","ThresholdSlideItem","useMutation","updateThreshold","useState","inputValue","setInputValue","isDisableButton","setIsDisableButton","useEffect","handleOnChange","confirm","span","marginTop","min","max","onChange","defaultValue","included","vertical","marginBottom","onClick","content","onOk","variables","_id","onCancel","disabled","danger","Statistics","useContext","DeviceContext","deviceState","deviceIdChoose","setDeviceIdChoose","propertyChoose","setPropertyChoose","setStartDate","setEndDate","length","FormGroup","Label","Control","as","e","target","map","device","name","Text","RangePicker","showTime","disabledDate","current","moment","endOf","dateString","_d","ThresholdSlide","ConfigSlideItem","apiKey","updateDevice","tipFormatter","formatter","ConfigTable","properties","ConfigSlide","SET_FOOT_CAN","SET_FOOT_TRAY","SET_FAN","UPDATE_FEEDING_CYLINDER_STATUS","preventDefault","event","isTouchEvent","touches","useLongPress","onLongPress","onRelease","shouldPreventDefault","delay","longPressTriggered","setLongPressTriggered","timeout","useRef","start","useCallback","addEventListener","passive","setTimeout","clear","shouldTriggerClick","clearTimeout","removeEventListener","onMouseDown","onTouchStart","onMouseUp","onMouseLeave","onTouchEnd","DefaultMarks","ConfigComponent","setDeviceState","updateCylinder","console","log","status","defaultOptions","longPressUpEvent","longPressDownEvent","Group","icon","CaretUpOutlined","CaretDownOutlined","createContext","App","useQuery","pollInterval","getFeedingDevices","Provider","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","client","ApolloClient","uri","process","cache","InMemoryCache","ReactDOM","render","ApolloProvider","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cd701c10.chunk.js","sourcesContent":["import { gql } from \"@apollo/client\";\r\n\r\nexport const ENVIRONMENT_FEEDING_UNIT = gql`\r\n    fragment EnvironmentFeedingUnit on EnvironmentFeedingUnit {\r\n        data\r\n        threshold\r\n        updateTime\r\n    }\r\n`;\r\n\r\nexport const GET_FEEDING_DEVICES = gql`\r\n    ${ENVIRONMENT_FEEDING_UNIT}\r\n    query getFeedingDevices {\r\n        getFeedingDevices {\r\n            _id\r\n            name \r\n            temperature {\r\n                ...EnvironmentFeedingUnit\r\n            }\r\n            o2Gas {\r\n                ...EnvironmentFeedingUnit\r\n            }\r\n            pH {\r\n                ...EnvironmentFeedingUnit\r\n            }\r\n            footCan\r\n            footTray\r\n            fan\r\n        }\r\n    }\r\n`;\r\n\r\nexport const CREATE_FEEDING_DEVICE = gql`\r\n    mutation CreateFeedingDevice($input: FeedingDeviceCreateInput) {\r\n        createFeedingDevice(input: $input) {\r\n            _id\r\n            name \r\n            temperature {\r\n                ...EnvironmentFeedingUnit\r\n            }\r\n            o2Gas {\r\n                ...EnvironmentFeedingUnit\r\n            }\r\n            pH {\r\n                ...EnvironmentFeedingUnit\r\n            }\r\n            footCan\r\n            footTray\r\n            fan\r\n        }\r\n    }\r\n`;\r\n\r\nexport const UPDATE_FEEDING_DEVICE = gql`\r\n    mutation UpdateFeedingDevice($input: FeedingDeviceUpdateInput) {\r\n        updateFeedingDevice(input: $input) {\r\n            _id\r\n            name \r\n            temperature {\r\n                ...EnvironmentFeedingUnit\r\n            }\r\n            o2Gas {\r\n                ...EnvironmentFeedingUnit\r\n            }\r\n            pH {\r\n                ...EnvironmentFeedingUnit\r\n            }\r\n            footCan\r\n            footTray\r\n            fan\r\n        }\r\n    }\r\n`;","import \"./header.css\";\r\nimport React from \"react\";\r\nimport {\r\n  Button,\r\n  Form,\r\n  FormControl,\r\n  Image,\r\n  Nav,\r\n  Navbar,\r\n} from \"react-bootstrap\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\n\r\nconst Header: React.FC = () => {\r\n  return (\r\n    <header className=\"border-bottom\">\r\n      <Navbar bg=\"light\" expand=\"lg\" className=\"p-0 px-2\" variant=\"light\">\r\n        <Navbar.Brand href=\"/\" className=\"p-0\">\r\n          <Image className=\"header__logo\" />\r\n        </Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          <Nav className=\"ml-auto d-flex align-items-center\">\r\n            <NavLink to=\"/\" className=\"px-3\" style={{fontSize: \"1.2rem\"}}>Home</NavLink>\r\n            <NavLink to=\"/devices\" className=\"px-3\" style={{fontSize: \"1.2rem\"}}>Thiết bị</NavLink>\r\n            <NavLink to=\"/statistics\" className=\"px-3\" style={{fontSize: \"1.2rem\"}}>Dữ liệu</NavLink>\r\n            <NavLink to=\"/about\" className=\"px-3 mr-3\" style={{fontSize: \"1.2rem\"}}>About</NavLink>\r\n          </Nav>\r\n          <Form inline className=\"mr-5\">\r\n            <FormControl\r\n              type=\"search\"\r\n              placeholder=\"Search\"\r\n              className=\"mr-2\"\r\n              aria-label=\"Search\"\r\n            />\r\n            <Button variant=\"outline-success\">Search</Button>\r\n          </Form>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","const Marks = {\r\n    \"0\": \"0\",\r\n    \"100\": {\r\n        style: {\r\n            color: '#f50',\r\n        },\r\n        label: <strong>100</strong>,\r\n    },\r\n    \"50\": {\r\n        style: {\r\n            color: '#d4d106',\r\n        },\r\n        label: <strong>50</strong>,\r\n    },\r\n}\r\n\r\nconst O2Marks = {\r\n    \"0\": \"0\",\r\n    \"10000\": {\r\n        style: {\r\n            color: '#f50',\r\n        },\r\n        label: <strong>10000</strong>,\r\n    },\r\n    \"5000\": {\r\n        style: {\r\n            color: '#d4d106',\r\n        },\r\n        label: <strong>5000</strong>,\r\n    },\r\n}\r\n\r\nconst ThresholdColor = {\r\n    errorThreshold: \"#ff0040\",\r\n    safeThreshold: \"#00d9ff\",\r\n}\r\n\r\nexport const Properties = [\r\n    {\r\n        label: \"Nồng độ O2 trong nước (mg/m3)\",\r\n        value: \"o2Gas\",\r\n        marks: O2Marks,\r\n        maxValue: 10000,\r\n        minValue: 0,\r\n        safeThresholeType: \"higher\",\r\n        thresholdColor: ThresholdColor,\r\n    },\r\n    {\r\n        label: \"Độ pH\",\r\n        value: \"pH\",\r\n        marks: Marks,\r\n        maxValue: 100,\r\n        minValue: 0,\r\n        safeThresholeType: \"lower\",\r\n        thresholdColor: ThresholdColor,\r\n    },\r\n    {\r\n        label: \"Nhiệt độ nước (°C)\",\r\n        value: \"temperature\",\r\n        marks: Marks,\r\n        maxValue: 100,\r\n        minValue: 0,\r\n        safeThresholeType: \"lower\",\r\n        thresholdColor: ThresholdColor,\r\n    },\r\n]\r\n","import { Bar } from \"react-chartjs-2\";\r\nimport { Property } from \"../ThresholdSlide\";\r\n\r\ninterface GraphProps {\r\n    data: any;\r\n    startDate: Date;\r\n    endDate: Date;\r\n    property: Property;\r\n}\r\n\r\nconst Graph = (props: GraphProps) => {\r\n    const { data, startDate, endDate, property } = props;\r\n    let showData: any[] = [];\r\n    let showLabels: any[] = [];\r\n    let showColors: any[] = [];\r\n    \r\n    if(data && startDate && endDate) {\r\n        data[property.value].updateTime.forEach((time: any, index: number) => {\r\n            if(time <= new Date(endDate).toISOString() && time >= new Date(startDate).toISOString()) {\r\n                showLabels.push(new Date(time).toLocaleString())\r\n                showData.push(data[property.value].data[index]);\r\n                if(property.safeThresholeType==='lower')\r\n                showColors.push(data[property.value].data[index] < data[property.value].threshold ? property.thresholdColor.safeThreshold : property.thresholdColor.errorThreshold);\r\n                if(property.safeThresholeType==='higher')\r\n                showColors.push(data[property.value].data[index] > data[property.value].threshold ? property.thresholdColor.safeThreshold : property.thresholdColor.errorThreshold);\r\n            }\r\n        });\r\n    }\r\n\r\n    const state = {\r\n        labels: showLabels,\r\n        datasets: [\r\n            {\r\n                // lineTension: 0.5,\r\n                label: property.label,\r\n                backgroundColor: showColors,\r\n                borderColor: 'rgba(0,0,0,1)',\r\n                borderWidth: 1,\r\n                data: showData,\r\n            }\r\n        ]\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            <Bar\r\n                style={{margin: \"30px\"}}\r\n                height={350}\r\n                width={500}\r\n                data={state}\r\n                options={{\r\n                    plugins: {\r\n                        title:{\r\n                            display:true,\r\n                            text: `Biểu đồ ${property.label}`,\r\n                            font: {\r\n                                size: 30\r\n                            },\r\n                            padding: 20\r\n                        },\r\n                        legend:{\r\n                            display:true,\r\n                            position:'bottom',\r\n                        },               \r\n                    },\r\n                    // scales: {\r\n                    //     y: {\r\n                    //         title: \"jfjfjf\",\r\n                    //         ticks: {\r\n                    //             // Include a dollar sign in the ticks\r\n                    //             callback: function(value: any) {\r\n                    //                 return '$' + value;\r\n                    //             }\r\n                    //         }\r\n                    //     }\r\n                    // }\r\n                }}\r\n                type=\"bar\"\r\n            />\r\n        </div>\r\n    )\r\n}\r\nexport default Graph;","import { gql } from \"@apollo/client\";\r\n\r\nexport const ENVIRONMENT_FEEDING_UNIT = gql`\r\n    fragment EnvironmentFeedingUnit on EnvironmentFeedingUnit {\r\n        data\r\n        threshold\r\n        updateTime\r\n    }\r\n`;\r\n\r\nexport const SET_FEEDING_THRESHOLD = gql`\r\n    ${ENVIRONMENT_FEEDING_UNIT}\r\n    mutation SetFeedingThreshold($value: Float!, $property: String!, $id: String!) {\r\n        setFeedingThreshold(value: $value, property: $property, id: $id) {\r\n            _id\r\n            name \r\n            temperature {\r\n                ...EnvironmentFeedingUnit\r\n            }\r\n            o2Gas {\r\n                ...EnvironmentFeedingUnit\r\n            }\r\n            pH {\r\n                ...EnvironmentFeedingUnit\r\n            }\r\n            footCan\r\n            footTray\r\n            fan\r\n            cylinder\r\n        }\r\n    }\r\n`;\r\n\r\n","import { Button, Col, InputNumber, Modal, Row, Slider } from \"antd\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Device } from \"../Devices\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport { SET_FEEDING_THRESHOLD } from \"../Statistics/setThresholdSchema\";\r\n\r\nexport interface Property {\r\n    label: string,\r\n    value: string,\r\n    marks?: any,\r\n    maxValue: number,\r\n    minValue: number,\r\n    safeThresholeType: string,\r\n    thresholdColor: {\r\n        errorThreshold: string,\r\n        safeThreshold: string,\r\n    }\r\n}\r\ninterface ThresholdSlideItemProps {\r\n    data: Device,\r\n    property: Property,\r\n}\r\n\r\nconst ThresholdSlideItem = (props: ThresholdSlideItemProps) => {\r\n    const { data, property } = props;\r\n    const [ updateThreshold ] = useMutation(SET_FEEDING_THRESHOLD);\r\n    const [ inputValue, setInputValue ] = useState((data as any)[property.value].threshold);\r\n    const [ isDisableButton, setIsDisableButton ] = useState(true);\r\n    \r\n    useEffect(() => {\r\n        setInputValue((data as any)[property.value].threshold)\r\n    },[property,data])\r\n\r\n    useEffect(() => {\r\n        setIsDisableButton(inputValue === (data as any)[property.value].threshold);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    },[inputValue]);\r\n\r\n    const handleOnChange = (value: number) => {\r\n        setInputValue(value)\r\n    }\r\n\r\n    const { confirm } = Modal;\r\n    const showConfirm = () => {\r\n        confirm({\r\n            title: 'Xác nhận điều chỉnh ngưỡng',\r\n            content: `${property.label} thay đổi chỉ số từ ${(data as any)[property.value].threshold} thành ${inputValue}`,\r\n            onOk() {\r\n                setIsDisableButton(true);\r\n                updateThreshold({\r\n                    variables: {\r\n                        value: inputValue,\r\n                        id: data._id,\r\n                        property: property.value,\r\n                    }\r\n                });\r\n            },\r\n            onCancel() {\r\n            },\r\n        });\r\n        \r\n    }\r\n\r\n    const handleClickReset = () => {\r\n        setIsDisableButton(false);\r\n        setInputValue((data as any)[property.value].threshold);\r\n    }\r\n\r\n    return (\r\n        <div className=\"thresholdSlideItem\">\r\n            <h3 className=\"\">Thiết lập ngưỡng cho phép</h3>\r\n            <h4 className=\"\">{property.label}</h4>\r\n            <Row>\r\n                <Col span={8}>\r\n                    <div style={{display:'inline-block', height:'45vh', marginTop:\"4vh\"}}>\r\n                    <Slider\r\n                        min={property.minValue}\r\n                        max={property.maxValue}\r\n                        onChange={handleOnChange}\r\n                        value={typeof inputValue === 'number' ? inputValue : 0}\r\n                        marks={property.marks}\r\n                        defaultValue={(data as any)[property.value].threshold}\r\n                        included\r\n                        vertical\r\n                    />\r\n                    </div>\r\n                </Col>\r\n                <Col span={8} style={{ margin: '0 16px' }}>\r\n                    <InputNumber\r\n                        min={0}\r\n                        max={100}\r\n                        className=\"my-5\"\r\n                        // formatter={value => `${value}`}\r\n                        value={inputValue}\r\n                        onChange={handleOnChange}\r\n                    />\r\n                    <Button\r\n                        style={{ marginBottom: '16px' }}\r\n                        type=\"primary\"\r\n                        onClick={showConfirm}\r\n                        disabled={isDisableButton}\r\n                    >\r\n                        Confirm\r\n                    </Button>\r\n                    <Button\r\n                        style={{ marginBottom: '16px' }}\r\n                        type=\"primary\"\r\n                        danger\r\n                        onClick={handleClickReset}\r\n                    >\r\n                        Reset\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ThresholdSlideItem;","import \"./index.scss\"\r\nimport moment from \"moment\";\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport { Form, FormGroup } from \"react-bootstrap\"\r\nimport { DeviceContext } from \"../../App\";\r\nimport { DatePicker } from \"antd\";\r\nimport { Properties } from \"./custom\";\r\nimport Graph from \"../Graph\";\r\nimport ThresholdSlideItem from \"../ThresholdSlide\";\r\n\r\nconst Statistics = () => {\r\n    const { deviceState } = useContext(DeviceContext);\r\n    const { data } = deviceState;\r\n    const [ deviceIdChoose, setDeviceIdChoose ] = useState(0); \r\n    const [ propertyChoose, setPropertyChoose ] = useState(Properties[0]);\r\n    const handleDeviceChange = (e: any) => {\r\n        setDeviceIdChoose(e.target.value)\r\n    }\r\n\r\n    const handlePropertyChange = (e: any) => {\r\n        setPropertyChoose(Properties[e.target.value])\r\n    }\r\n    const [ startDate, setStartDate ] = useState<any>(null);\r\n    const [ endDate, setEndDate ] = useState<any>(null);    \r\n\r\n    useEffect(() => {\r\n        if(data && data[0] && !startDate && !endDate) {\r\n            setStartDate((data[deviceIdChoose][propertyChoose.value] as any).updateTime[0].toLocaleString());\r\n            setEndDate((data[deviceIdChoose][propertyChoose.value] as any).updateTime[(data[deviceIdChoose][propertyChoose.value]as any).updateTime.length-1].toLocaleString())\r\n        }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    },[data])\r\n\r\n    const handleOnChangeDate = (value: any, dateString: any) => {\r\n        // console.log(value,\"value\");\r\n        // console.log(dateString,\"string\");\r\n    }\r\n\r\n    const onOk = (value: any) => {\r\n        setStartDate(value[0]?._d)\r\n        setEndDate(value[1]?._d)\r\n    }\r\n    const disabledDate = (current: any) => {\r\n        return current > moment().endOf('day');\r\n    }\r\n\r\n    return (\r\n        <div className=\"d-flex flex-row justify-content-center\">\r\n            <div className=\"p-3 graphContainer\">\r\n                <Form className=\"d-flex flex-row justify-content-center\">\r\n                    <FormGroup className=\"px-5\">\r\n                        <Form.Label>Chọn thiết bị</Form.Label>\r\n                        <Form.Control\r\n                            as=\"select\"\r\n                            type=\"name\"\r\n                            placeholder=\"Name\"\r\n                            className=\"\"\r\n                            onChange={handleDeviceChange}\r\n                        >\r\n                            {data && data.map((device: any, index: number) => (\r\n                                <option key={device._id} value={index}>{device.name}</option>\r\n                            ))}\r\n                        </Form.Control>\r\n                    </FormGroup>\r\n                    <FormGroup className=\"px-5\">\r\n                        <Form.Label>Chọn thông số</Form.Label>\r\n                        <Form.Control\r\n                            as=\"select\"\r\n                            type=\"property\"\r\n                            placeholder=\"Property\"\r\n                            className=\"\"\r\n                            onChange={handlePropertyChange}\r\n                        >\r\n                            {Properties.map((property: any, index: number) => (\r\n                                <option key={property.label} value={index}>{property.label}</option>\r\n                            ))}\r\n                        </Form.Control>\r\n                    </FormGroup>\r\n                    <FormGroup className=\"px-5\">\r\n                        <Form.Label>Chọn khoảng thời gian</Form.Label>\r\n                        <Form.Text>\r\n                            <DatePicker.RangePicker \r\n                                showTime\r\n                                disabledDate={disabledDate}\r\n                                onChange={handleOnChangeDate}\r\n                                onOk={onOk}\r\n                            />\r\n                        </Form.Text>\r\n                    </FormGroup>\r\n                </Form>\r\n                {data && (\r\n                    <Graph \r\n                        data={data[deviceIdChoose]} \r\n                        startDate={startDate}\r\n                        endDate={endDate}\r\n                        property={propertyChoose}\r\n                    />\r\n                )}\r\n            </div>\r\n            <div className=\"setThresholdContainer\">\r\n                {data[deviceIdChoose] && (\r\n                    <ThresholdSlideItem\r\n                        data={data[deviceIdChoose]}\r\n                        property={propertyChoose}\r\n                    />\r\n                )}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Statistics;","import { Button, Col, InputNumber, Row, Slider, Modal } from \"antd\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Device } from \"../Devices\";\r\nimport { EngineProperty } from \"../ConfigTable/index\";\r\nimport { useMutation } from \"@apollo/client\";\r\n\r\ninterface SlideItemProps {\r\n    data: Device,\r\n    property: EngineProperty,\r\n}\r\n\r\nconst ConfigSlideItem = (props: SlideItemProps) => {\r\n    const { data, property } = props;\r\n    const [ inputValue, setInputValue ] = useState((data as any)[property.value]);\r\n    const formatter = (value: any) => `${value}%`\r\n    const [ isDisableButton, setIsDisableButton ] = useState(true);\r\n    const [ updateDevice, { data: updateData }] = useMutation(property.apiKey)\r\n    \r\n    useEffect(() => {\r\n        setInputValue((data as any)[property.value])\r\n    },[data])\r\n\r\n    useEffect(() => {\r\n        setIsDisableButton(inputValue === (data as any)[property.value]);\r\n    },[inputValue]);\r\n\r\n    const handleOnChange = (value: number) => {\r\n        setInputValue(value)\r\n    }\r\n\r\n    const { confirm } = Modal;\r\n    const showConfirm = () => {\r\n        confirm({\r\n            title: 'Xác nhận điều chỉnh thông số',\r\n            content: `${property.label} thay đổi chỉ số từ ${(data as any)[property.value]} thành ${inputValue}`,\r\n            onOk() {\r\n                setIsDisableButton(true);\r\n                updateDevice({\r\n                    variables: {\r\n                        value: inputValue,\r\n                        id: data._id,\r\n                    }\r\n                });\r\n            },\r\n            onCancel() {\r\n            },\r\n        });\r\n        \r\n    }\r\n\r\n    const handleClickReset = () => {\r\n        setIsDisableButton(false);\r\n        setInputValue((data as any)[property.value]);\r\n    }\r\n\r\n    return (\r\n        <div className=\"p-3 m-2\">\r\n            <h4 className=\"d-flex justify-content-flex-start\">{property.label}</h4>\r\n            <Row>\r\n                <Col span={7}>\r\n                    <Slider\r\n                        min={-100}\r\n                        max={100}\r\n                        onChange={handleOnChange}\r\n                        value={typeof inputValue === 'number' ? inputValue : 0}\r\n                        marks={property.marks}\r\n                        defaultValue={(data as any)[property.value]}\r\n                        tipFormatter={formatter}\r\n                    />\r\n                </Col>\r\n                <Col span={3}>\r\n                    <InputNumber\r\n                        min={-100}\r\n                        max={100}\r\n                        style={{ margin: '0 16px' }}\r\n                        formatter={value => `${value}`}\r\n                        value={inputValue}\r\n                        onChange={handleOnChange}\r\n                    />\r\n                </Col>\r\n                <Col span={1}>\r\n                    <Button\r\n                        type=\"primary\"\r\n                        onClick={showConfirm}\r\n                        disabled={isDisableButton}\r\n                    >\r\n                        Confirm\r\n                    </Button>\r\n                </Col>\r\n                <Col span={3}>\r\n                    <Button\r\n                        type=\"primary\"\r\n                        danger\r\n                        onClick={handleClickReset}\r\n                    >\r\n                        Reset\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ConfigSlideItem;","import { DocumentNode } from \"graphql\";\r\nimport { Device } from \"../Devices\";\r\nimport ConfigSlideItem from \"../ConfigSlide\";\r\n\r\nexport interface EngineProperty {\r\n    label: string,\r\n    value: string,\r\n    marks?: any,\r\n    apiKey: DocumentNode,\r\n}\r\n\r\ninterface ConfigTableProps {\r\n    data: Device;\r\n    properties: EngineProperty[];\r\n}\r\n\r\nconst ConfigTable = (props: ConfigTableProps) => {\r\n    const { data, properties } = props;\r\n    return (\r\n        <>\r\n            {properties.map(property => (\r\n                <ConfigSlideItem data={data} property={property}/>    \r\n            ))}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ConfigTable;","import { gql } from \"@apollo/client\";\r\n\r\nexport const ENVIRONMENT_FEEDING_UNIT = gql`\r\n    fragment EnvironmentFeedingUnit on EnvironmentFeedingUnit {\r\n        data\r\n        threshold\r\n        updateTime\r\n    }\r\n`;\r\n\r\nexport const SET_FOOT_CAN = gql`\r\n    ${ENVIRONMENT_FEEDING_UNIT}\r\n    mutation SetFootCan($value: Float!, $id: String!) {\r\n        setFootCan(value: $value, id: $id) {\r\n            _id\r\n            name \r\n            temperature {\r\n                ...EnvironmentFeedingUnit\r\n            }\r\n            o2Gas {\r\n                ...EnvironmentFeedingUnit\r\n            }\r\n            pH {\r\n                ...EnvironmentFeedingUnit\r\n            }\r\n            footCan\r\n            footTray\r\n            fan\r\n            cylinder\r\n        }\r\n    }\r\n`;\r\n\r\nexport const SET_FOOT_TRAY = gql`\r\n    ${ENVIRONMENT_FEEDING_UNIT}\r\n    mutation SetFootTray($value: Float!, $id: String!) {\r\n        setFootTray(value: $value, id: $id) {\r\n            _id\r\n            name \r\n            temperature {\r\n                ...EnvironmentFeedingUnit\r\n            }\r\n            o2Gas {\r\n                ...EnvironmentFeedingUnit\r\n            }\r\n            pH {\r\n                ...EnvironmentFeedingUnit\r\n            }\r\n            footCan\r\n            footTray\r\n            fan\r\n            cylinder\r\n        }\r\n    }\r\n`;\r\n\r\nexport const SET_FAN = gql`\r\n    ${ENVIRONMENT_FEEDING_UNIT}\r\n    mutation SetFan($value: Float!, $id: String!) {\r\n        setFan(value: $value, id: $id) {\r\n            _id\r\n            name \r\n            temperature {\r\n                ...EnvironmentFeedingUnit\r\n            }\r\n            o2Gas {\r\n                ...EnvironmentFeedingUnit\r\n            }\r\n            pH {\r\n                ...EnvironmentFeedingUnit\r\n            }\r\n            footCan\r\n            footTray\r\n            fan\r\n            cylinder\r\n        }\r\n    }\r\n`;\r\n\r\nexport const UPDATE_FEEDING_CYLINDER_STATUS = gql`\r\n    ${ENVIRONMENT_FEEDING_UNIT}\r\n    mutation UpdateFeedingCylinderStatus($id: String!, $status: String!) {\r\n        updateFeedingCylinderStatus(id: $id, status: $status) {\r\n            _id\r\n            name \r\n            temperature {\r\n                ...EnvironmentFeedingUnit\r\n            }\r\n            o2Gas {\r\n                ...EnvironmentFeedingUnit\r\n            }\r\n            pH {\r\n                ...EnvironmentFeedingUnit\r\n            }\r\n            footCan\r\n            footTray\r\n            fan\r\n            cylinder\r\n        }\r\n    }\r\n`;\r\n","import { useCallback, useRef, useState } from \"react\";\r\n\r\nconst useLongPress = (\r\n    onLongPress,\r\n    onClick,\r\n    onRelease,\r\n    { shouldPreventDefault = true, delay = 300 } = {}\r\n    ) => {\r\n    const [longPressTriggered, setLongPressTriggered] = useState(false);\r\n    const timeout = useRef();\r\n    const target = useRef();\r\n\r\n    const start = useCallback(\r\n        event => {\r\n            if (shouldPreventDefault && event.target) {\r\n                    event.target.addEventListener(\"touchend\", preventDefault, {\r\n                    passive: false\r\n                });\r\n                target.current = event.target;\r\n            }\r\n            timeout.current = setTimeout(() => {\r\n                onLongPress(event);\r\n                setLongPressTriggered(true);\r\n            }, delay);\r\n        },\r\n        [onLongPress, delay, shouldPreventDefault]\r\n    );\r\n\r\n    const clear = useCallback(\r\n        (event, shouldTriggerClick = true) => {\r\n            timeout.current && clearTimeout(timeout.current);\r\n            shouldTriggerClick && !longPressTriggered && onClick();\r\n            shouldTriggerClick && longPressTriggered && onRelease();\r\n            setLongPressTriggered(false);\r\n            if (shouldPreventDefault && target.current) {\r\n                target.current.removeEventListener(\"touchend\", preventDefault);\r\n            }\r\n        },\r\n        [shouldPreventDefault, onClick, onRelease, longPressTriggered]\r\n    );\r\n\r\n    return {\r\n        onMouseDown: e => start(e),\r\n        onTouchStart: e => start(e),\r\n        onMouseUp: e => clear(e),\r\n        onMouseLeave: e => clear(e, false),\r\n        onTouchEnd: e => clear(e)\r\n    };\r\n};\r\n\r\nconst isTouchEvent = event => {\r\nreturn \"touches\" in event;\r\n};\r\n\r\nconst preventDefault = event => {\r\nif (!isTouchEvent(event)) return;\r\n\r\nif (event.touches.length < 2 && event.preventDefault) {\r\n    event.preventDefault();\r\n}\r\n};\r\n\r\nexport default useLongPress;","import { Button } from \"antd\";\r\nimport { useContext, useState } from \"react\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport { DeviceContext } from \"../../App\";\r\nimport ConfigTable from \"../ConfigTable\";\r\nimport { SET_FAN, SET_FOOT_CAN, SET_FOOT_TRAY, UPDATE_FEEDING_CYLINDER_STATUS } from \"../ConfigTable/setEngineSchema\";\r\nimport { CaretUpOutlined, CaretDownOutlined } from '@ant-design/icons';\r\nimport { useMutation } from \"@apollo/client\";\r\nimport useLongPress from \"./useLongPress\";\r\n\r\n\r\nconst DefaultMarks = {\r\n    \"0\": \"0\",\r\n    \"-100\": {\r\n        style: {\r\n            color: '#f50',\r\n        },\r\n        label: <strong>-100</strong>,\r\n    },\r\n    \"100\": {\r\n        style: {\r\n            color: '#f50',\r\n        },\r\n        label: <strong>100</strong>,\r\n    },\r\n    \"-75\": {\r\n        style: {\r\n            color: '#d4d106',\r\n        },\r\n        label: <strong>-75</strong>,\r\n    },\r\n    \"75\": {\r\n        style: {\r\n            color: '#d4d106',\r\n        },\r\n        label: <strong>75</strong>,\r\n    },\r\n    \"-50\": {\r\n        style: {\r\n            color: '#02ff63',\r\n        },\r\n        label: <strong>-50</strong>,\r\n    },\r\n    \"50\": {\r\n        style: {\r\n            color: '#02ff63',\r\n        },\r\n        label: <strong>50</strong>,\r\n    },\r\n}\r\nconst Properties = [\r\n    {\r\n        label: \"Động cơ mở khoang thức ăn\",\r\n        value: \"footCan\",\r\n        marks: DefaultMarks,\r\n        apiKey: SET_FOOT_CAN,\r\n    },\r\n    {\r\n        label: \"Động cơ quay khay thức ăn\",\r\n        value: \"footTray\",\r\n        marks: DefaultMarks,\r\n        apiKey: SET_FOOT_TRAY,\r\n    },\r\n    {\r\n        label: \"Động cơ cánh quạt chân vịt\",\r\n        value: \"fan\",\r\n        marks: DefaultMarks,\r\n        apiKey: SET_FAN,\r\n    }\r\n];\r\n\r\nconst ConfigComponent = () => {\r\n    const { deviceState, setDeviceState } = useContext(DeviceContext);\r\n    const [ updateCylinder ] = useMutation(UPDATE_FEEDING_CYLINDER_STATUS);\r\n\r\n    const { data } = deviceState;\r\n    const [ deviceIdChoose, setDeviceIdChoose ] = useState(0); \r\n    const handleDeviceChange = (e: any) => {\r\n        setDeviceIdChoose(e.target.value)\r\n    }\r\n\r\n    const onLongPressUp = () => {\r\n        console.log('longpress up is triggered');\r\n        updateCylinder({\r\n            variables: {\r\n                id: (data[deviceIdChoose] as any)._id,\r\n                status: \"up\"\r\n            }\r\n        })\r\n    };\r\n    \r\n    const onLongPressDown = () => {\r\n        console.log('longpress down is triggered');\r\n        updateCylinder({\r\n            variables: {\r\n                id: (data[deviceIdChoose] as any)._id,\r\n                status: \"down\"\r\n            }\r\n        })\r\n    };\r\n    const onRelease = () => {\r\n        console.log('release up')\r\n        updateCylinder({\r\n            variables: {\r\n                id: (data[deviceIdChoose] as any)._id,\r\n                status: \"stop\"\r\n            }\r\n        })\r\n        \r\n    }\r\n    \r\n    const onClickUp = () => {\r\n        console.log('click up is triggered')\r\n    }\r\n    const onClickDown = () => {\r\n        console.log('click down is triggered')\r\n    }\r\n\r\n    const defaultOptions = {\r\n        shouldPreventDefault: true,\r\n        delay: 200,\r\n    };\r\n\r\n    const longPressUpEvent = useLongPress(onLongPressUp, onClickUp, onRelease, defaultOptions);\r\n    const longPressDownEvent = useLongPress(onLongPressDown, onClickDown, onRelease, defaultOptions);\r\n\r\n\r\n    return (\r\n        <div className=\"px-5 py-4\">\r\n            <h1>Điều chỉnh thông số động cơ thiết bị</h1> \r\n            <Form className=\"d-flex \">\r\n                <Form.Group className=\"py-2 px-4\">\r\n                    <Form.Label style={{fontSize: \"1.2rem\"}}>Chọn thiết bị</Form.Label>\r\n                    <Form.Control\r\n                        as=\"select\"\r\n                        type=\"name\"\r\n                        placeholder=\"Name\"\r\n                        onChange={handleDeviceChange}\r\n                    >\r\n                        {data && data.map((device: any, index: number) => (\r\n                            <option value={index}>{device.name}</option>\r\n                        ))}\r\n                    </Form.Control>\r\n                </Form.Group>\r\n            </Form>\r\n            <div className=\"d-flex flex-row justify-content-flex-start px-4\">\r\n                <h4 className=\"align-self-center\">Điều chỉnh khay thức ăn</h4>\r\n                <div className=\"d-flex flex-column justify-content-center mx-5\">\r\n                    <Button \r\n                        {...longPressUpEvent}\r\n                        icon={<CaretUpOutlined />}\r\n                        size=\"large\"\r\n                    />\r\n                    <Button \r\n                        {...longPressDownEvent}\r\n                        icon={<CaretDownOutlined />}\r\n                        size=\"large\"\r\n                    />\r\n                </div>\r\n            </div>\r\n            {data[0] && <ConfigTable data={data[deviceIdChoose]} properties={Properties}/>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ConfigComponent;","import \"./App.css\";\r\nimport { createContext, useEffect, useState } from \"react\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport { useQuery } from \"@apollo/client\";\r\nimport { GET_FEEDING_DEVICES } from \"./component/Devices/schema\";\r\nimport Header from \"./component/Header\";\r\nimport Statistics from \"./component/Statistics\";\r\nimport ConfigComponent from \"./component/ConfigComponent\";\r\n\r\nexport const DeviceContext = createContext({\r\n  deviceState: {\r\n    data: [],\r\n  },\r\n  setDeviceState: (() => {}) as any,\r\n});\r\n\r\nfunction App() {\r\n  const { data } = useQuery(GET_FEEDING_DEVICES, {\r\n    pollInterval: 10000,\r\n  });\r\n  const [deviceState, setDeviceState] = useState({data: []});\r\n  \r\n  useEffect(() => {\r\n    if(data)\r\n    setDeviceState({\r\n      data: data?.getFeedingDevices\r\n    })\r\n  }, [data]);\r\n  \r\n  return (\r\n    <DeviceContext.Provider value={{ deviceState, setDeviceState}}>\r\n      <div className=\"App\">\r\n        <div className=\"vh-100 mvw-100 m-0 flex-column flex no-wrap\">\r\n          <main className=\"flex-grow\">\r\n            <BrowserRouter>\r\n              <Header/>\r\n              <Switch>\r\n                <Route path=\"/devices\">\r\n                  <Statistics />\r\n                </Route>\r\n                <Route path=\"/statistics\">\r\n                  <Statistics />\r\n                </Route>\r\n                <Route path=\"/\">\r\n                  <ConfigComponent/>\r\n                </Route>\r\n              </Switch>\r\n            </BrowserRouter>\r\n          </main>\r\n        </div>\r\n      </div>\r\n    </DeviceContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { ApolloClient, ApolloProvider, InMemoryCache } from '@apollo/client';\r\n\r\nconst client = new ApolloClient({\r\n  uri: process.env.REACT_APP_GRAPHQL_URI,\r\n  cache: new InMemoryCache(),\r\n});\r\n\r\nReactDOM.render(\r\n  <ApolloProvider client={client}>\r\n    <React.StrictMode>\r\n      <App />\r\n    </React.StrictMode>\r\n  </ApolloProvider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}